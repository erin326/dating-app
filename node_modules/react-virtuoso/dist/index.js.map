{"version":3,"file":"index.js","sources":["../src/hooks/useIsomorphicLayoutEffect.ts","../src/loggerSystem.ts","../src/hooks/useSize.ts","../src/hooks/useChangedChildSizes.ts","../src/utils/correctItemSize.ts","../src/hooks/useScrollTop.ts","../src/domIOSystem.ts","../src/AATree.ts","../src/utils/binaryArraySearch.ts","../src/sizeSystem.ts","../src/scrollToIndexSystem.ts","../src/stateFlagsSystem.ts","../src/propsReadySystem.ts","../src/initialTopMostItemIndexSystem.ts","../src/followOutputSystem.ts","../src/groupedListSystem.ts","../src/comparators.tsx","../src/sizeRangeSystem.ts","../src/listStateSystem.ts","../src/utils/simpleMemoize.ts","../src/initialItemCountSystem.ts","../src/scrollSeekSystem.ts","../src/topItemCountSystem.ts","../src/totalListHeightSystem.ts","../src/upwardScrollFixSystem.ts","../src/initialScrollTopSystem.ts","../src/alignToBottomSystem.ts","../src/windowScrollerSystem.ts","../src/scrollIntoViewSystem.ts","../src/listSystem.ts","../src/utils/positionStickyCssValue.ts","../src/hooks/useWindowViewportRect.ts","../src/List.tsx","../src/gridSystem.ts","../src/Grid.tsx","../src/Table.tsx","../src/components.tsx"],"sourcesContent":["import { useEffect, useLayoutEffect } from 'react'\n\nconst useIsomorphicLayoutEffect = typeof document !== 'undefined' ? useLayoutEffect : useEffect\n\nexport default useIsomorphicLayoutEffect\n","import * as u from '@virtuoso.dev/urx'\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\ndeclare namespace globalThis {\n  let VIRTUOSO_LOG_LEVEL: LogLevel | undefined\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\ndeclare namespace window {\n  let VIRTUOSO_LOG_LEVEL: LogLevel | undefined\n}\n\nexport enum LogLevel {\n  DEBUG,\n  INFO,\n  WARN,\n  ERROR,\n}\nexport interface LogMessage {\n  level: LogLevel\n  message: any\n  label: string\n}\n\nexport type Log = (label: string, message: any, level?: LogLevel) => void\n\nconst CONSOLE_METHOD_MAP = {\n  [LogLevel.DEBUG]: 'debug',\n  [LogLevel.INFO]: 'log',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error',\n} as const\n\nconst getGlobalThis = () => (typeof globalThis === 'undefined' ? window : globalThis)\n\nexport const loggerSystem = u.system(\n  () => {\n    const logLevel = u.statefulStream<LogLevel>(LogLevel.ERROR)\n    const log = u.statefulStream<Log>((label: string, message: any, level: LogLevel = LogLevel.INFO) => {\n      const currentLevel = getGlobalThis()['VIRTUOSO_LOG_LEVEL'] ?? u.getValue(logLevel)\n      if (level >= currentLevel) {\n        // eslint-disable-next-line no-console\n        console[CONSOLE_METHOD_MAP[level]](\n          '%creact-virtuoso: %c%s %o',\n          'color: #0253b3; font-weight: bold',\n          'color: initial',\n          label,\n          message\n        )\n      }\n    })\n\n    return {\n      log,\n      logLevel,\n    }\n  },\n  [],\n  { singleton: true }\n)\n","import { useRef } from 'react'\n\nexport type CallbackRefParam = HTMLElement | null\n\nexport function useSizeWithElRef(callback: (e: HTMLElement) => void, enabled = true) {\n  const ref = useRef<CallbackRefParam>(null)\n\n  let callbackRef = (_el: CallbackRefParam) => {\n    void 0\n  }\n\n  if (typeof ResizeObserver !== 'undefined') {\n    const observer = new ResizeObserver((entries: ResizeObserverEntry[]) => {\n      const element = entries[0].target as HTMLElement\n      if (element.offsetParent !== null) {\n        callback(element)\n      }\n    })\n\n    callbackRef = (elRef: CallbackRefParam) => {\n      if (elRef && enabled) {\n        observer.observe(elRef)\n        ref.current = elRef\n      } else {\n        if (ref.current) {\n          observer.unobserve(ref.current)\n        }\n        ref.current = null\n      }\n    }\n  }\n\n  return { ref, callbackRef }\n}\n\nexport default function useSize(callback: (e: HTMLElement) => void, enabled = true) {\n  return useSizeWithElRef(callback, enabled).callbackRef\n}\n","import { Log, LogLevel } from '../loggerSystem'\nimport { SizeFunction, SizeRange } from '../sizeSystem'\nimport useSize from './useSize'\n\nexport default function useChangedListContentsSizes(\n  callback: (ranges: SizeRange[]) => void,\n  itemSize: SizeFunction,\n  enabled: boolean,\n  scrollContainerStateCallback: (state: [number, number]) => void,\n  log: Log,\n  customScrollParent?: HTMLElement\n) {\n  return useSize((el: HTMLElement) => {\n    const ranges = getChangedChildSizes(el.children, itemSize, 'offsetHeight', log)\n    let scrollableElement = el.parentElement!\n\n    while (!scrollableElement.dataset['virtuosoScroller']) {\n      scrollableElement = scrollableElement.parentElement!\n    }\n\n    const scrollTop = customScrollParent\n      ? customScrollParent.scrollTop\n      : // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      (scrollableElement.firstElementChild! as HTMLDivElement).dataset['viewportType']! === 'window'\n      ? window.pageYOffset || document.documentElement.scrollTop\n      : scrollableElement.scrollTop\n\n    customScrollParent\n      ? scrollContainerStateCallback([Math.max(scrollTop, 0), customScrollParent.scrollHeight])\n      : scrollContainerStateCallback([Math.max(scrollTop, 0), scrollableElement.scrollHeight])\n    if (ranges !== null) {\n      callback(ranges)\n    }\n  }, enabled)\n}\n\nfunction getChangedChildSizes(children: HTMLCollection, itemSize: SizeFunction, field: 'offsetHeight' | 'offsetWidth', log: Log) {\n  const length = children.length\n\n  if (length === 0) {\n    return null\n  }\n\n  const results: SizeRange[] = []\n\n  for (let i = 0; i < length; i++) {\n    const child = children.item(i) as HTMLElement\n\n    if (!child || child.dataset.index === undefined) {\n      continue\n    }\n\n    const index = parseInt(child.dataset.index!)\n    const knownSize = parseFloat(child.dataset.knownSize!)\n    const size = itemSize(child, field)\n\n    if (size === 0) {\n      log('Zero-sized element, this should not happen', { child }, LogLevel.ERROR)\n    }\n\n    if (size === knownSize) {\n      continue\n    }\n\n    const lastResult = results[results.length - 1]\n    if (results.length === 0 || lastResult.size !== size || lastResult.endIndex !== index - 1) {\n      results.push({ startIndex: index, endIndex: index, size })\n    } else {\n      results[results.length - 1].endIndex++\n    }\n  }\n\n  return results\n}\n","export function correctItemSize(el: HTMLElement, dimension: 'height' | 'width') {\n  return Math.round(el.getBoundingClientRect()[dimension])\n}\n","import { useRef, useCallback, useEffect } from 'react'\nimport * as u from '@virtuoso.dev/urx'\nimport { correctItemSize } from '../utils/correctItemSize'\n\nexport type ScrollerRef = Window | HTMLElement | null\n\nfunction approximatelyEqual(num1: number, num2: number) {\n  return Math.abs(num1 - num2) < 1.01\n}\n\nexport default function useScrollTop(\n  scrollContainerStateCallback: (state: [number, number]) => void,\n  smoothScrollTargetReached: (yes: true) => void,\n  scrollerElement: any,\n  scrollerRefCallback: (ref: ScrollerRef) => void = u.noop,\n  customScrollParent?: HTMLElement\n) {\n  const scrollerRef = useRef<HTMLElement | null | Window>(null)\n  const scrollTopTarget = useRef<any>(null)\n  const timeoutRef = useRef<any>(null)\n\n  const handler = useCallback(\n    (ev: Event) => {\n      const el = ev.target as HTMLElement\n      const scrollTop =\n        (el as any) === window || (el as any) === document ? window.pageYOffset || document.documentElement.scrollTop : el.scrollTop\n      const scrollHeight = (el as any) === window ? document.documentElement.scrollHeight : el.scrollHeight\n\n      scrollContainerStateCallback([Math.max(scrollTop, 0), scrollHeight])\n\n      if (scrollTopTarget.current !== null) {\n        if (scrollTop === scrollTopTarget.current || scrollTop <= 0 || scrollTop === el.scrollHeight - correctItemSize(el, 'height')) {\n          scrollTopTarget.current = null\n          smoothScrollTargetReached(true)\n          if (timeoutRef.current) {\n            clearTimeout(timeoutRef.current)\n            timeoutRef.current = null\n          }\n        }\n      }\n    },\n    [scrollContainerStateCallback, smoothScrollTargetReached]\n  )\n\n  useEffect(() => {\n    const localRef = customScrollParent ? customScrollParent : scrollerRef.current!\n\n    scrollerRefCallback(customScrollParent ? customScrollParent : scrollerRef.current)\n    handler({ target: localRef } as unknown as Event)\n    localRef.addEventListener('scroll', handler, { passive: true })\n\n    return () => {\n      scrollerRefCallback(null)\n      localRef.removeEventListener('scroll', handler)\n    }\n  }, [scrollerRef, handler, scrollerElement, scrollerRefCallback, customScrollParent])\n\n  function scrollToCallback(location: ScrollToOptions) {\n    const scrollerElement = scrollerRef.current\n    if (!scrollerElement || ('offsetHeight' in scrollerElement && scrollerElement.offsetHeight === 0)) {\n      return\n    }\n\n    const isSmooth = location.behavior === 'smooth'\n\n    let offsetHeight: number\n    let scrollHeight: number\n    let scrollTop: number\n\n    if (scrollerElement === window) {\n      // this is not a mistake\n      scrollHeight = Math.max(correctItemSize(document.documentElement, 'height'), document.documentElement.scrollHeight)\n      offsetHeight = window.innerHeight\n      scrollTop = document.documentElement.scrollTop\n    } else {\n      scrollHeight = (scrollerElement as HTMLElement).scrollHeight\n      offsetHeight = correctItemSize(scrollerElement as HTMLElement, 'height')\n      scrollTop = (scrollerElement as HTMLElement).scrollTop\n    }\n\n    const maxScrollTop = scrollHeight - offsetHeight\n    location.top = Math.ceil(Math.max(Math.min(maxScrollTop, location.top!), 0))\n\n    // avoid system hanging because the DOM never called back\n    // with the scrollTop\n    // scroller is already at this location\n    if (approximatelyEqual(offsetHeight, scrollHeight) || location.top === scrollTop) {\n      scrollContainerStateCallback([scrollTop, scrollHeight])\n      if (isSmooth) {\n        smoothScrollTargetReached(true)\n      }\n      return\n    }\n\n    if (isSmooth) {\n      scrollTopTarget.current = location.top\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current)\n      }\n\n      timeoutRef.current = setTimeout(() => {\n        timeoutRef.current = null\n        scrollTopTarget.current = null\n        smoothScrollTargetReached(true)\n      }, 1000)\n    } else {\n      scrollTopTarget.current = null\n    }\n\n    scrollerElement.scrollTo(location)\n  }\n\n  function scrollByCallback(location: ScrollToOptions) {\n    if (scrollTopTarget.current === null) {\n      scrollerRef.current!.scrollBy(location)\n    }\n  }\n\n  return { scrollerRef, scrollByCallback, scrollToCallback }\n}\n","import * as u from '@virtuoso.dev/urx'\n\nexport const domIOSystem = u.system(\n  () => {\n    const scrollContainerState = u.stream<[number, number]>()\n    const scrollTop = u.stream<number>()\n    const deviation = u.statefulStream(0)\n    const smoothScrollTargetReached = u.stream<true>()\n    const statefulScrollTop = u.statefulStream(0)\n    const viewportHeight = u.stream<number>()\n    const scrollHeight = u.stream<number>()\n    const headerHeight = u.statefulStream(0)\n    const footerHeight = u.statefulStream(0)\n    const scrollTo = u.stream<ScrollToOptions>()\n    const scrollBy = u.stream<ScrollToOptions>()\n    const scrollingInProgress = u.statefulStream(false)\n\n    u.connect(\n      u.pipe(\n        scrollContainerState,\n        u.map(([scrollTop]) => scrollTop)\n      ),\n      scrollTop\n    )\n\n    u.connect(\n      u.pipe(\n        scrollContainerState,\n        u.map(([, scrollHeight]) => scrollHeight)\n      ),\n      scrollHeight\n    )\n\n    u.connect(scrollTop, statefulScrollTop)\n\n    return {\n      // input\n      scrollContainerState,\n      scrollTop,\n      viewportHeight,\n      headerHeight,\n      footerHeight,\n      scrollHeight,\n      smoothScrollTargetReached,\n\n      // signals\n      scrollTo,\n      scrollBy,\n\n      // state\n      statefulScrollTop,\n      deviation,\n      scrollingInProgress,\n    }\n  },\n  [],\n  { singleton: true }\n)\n","interface NilNode {\n  lvl: 0\n}\n\nconst NIL_NODE: NilNode = { lvl: 0 }\n\ninterface NodeData<T> {\n  k: number\n  v: T\n}\n\ninterface NonNilAANode<T> {\n  k: number\n  v: T\n  lvl: number\n  l: NonNilAANode<T> | NilNode\n  r: NonNilAANode<T> | NilNode\n}\n\nexport interface Range<T> {\n  start: number\n  end: number\n  value: T\n}\n\nexport type AANode<T> = NilNode | NonNilAANode<T>\n\nfunction newAANode<T>(k: number, v: T, lvl: number, l: AANode<T> = NIL_NODE, r: AANode<T> = NIL_NODE): NonNilAANode<T> {\n  return { k, v, lvl, l, r }\n}\n\nexport function empty(node: AANode<any>): node is NilNode {\n  return node === NIL_NODE\n}\n\nexport function newTree<T>(): AANode<T> {\n  return NIL_NODE\n}\n\nexport function remove<T>(node: AANode<T>, key: number): AANode<T> {\n  if (empty(node)) return NIL_NODE\n\n  const { k, l, r } = node\n\n  if (key === k) {\n    if (empty(l)) {\n      return r\n    } else if (empty(r)) {\n      return l\n    } else {\n      const [lastKey, lastValue] = last(l)\n      return adjust(clone(node, { k: lastKey, v: lastValue, l: deleteLast(l) }))\n    }\n  } else if (key < k) {\n    return adjust(clone(node, { l: remove(l, key) }))\n  } else {\n    return adjust(clone(node, { r: remove(r, key) }))\n  }\n}\n\nexport function find<T>(node: AANode<T>, key: number): T | undefined {\n  if (empty(node)) {\n    return\n  }\n\n  if (key === node.k) {\n    return node.v\n  } else if (key < node.k) {\n    return find(node.l, key)\n  } else {\n    return find(node.r, key)\n  }\n}\n\nexport function findMaxKeyValue<T>(node: AANode<T>, value: number, field: 'k' | 'v' = 'k'): [number, T | undefined] {\n  if (empty(node)) {\n    return [-Infinity, undefined]\n  }\n\n  if (node[field] === value) {\n    return [node.k, node.v]\n  }\n\n  if (node[field] < value) {\n    const r = findMaxKeyValue(node.r, value, field)\n    if (r[0] === -Infinity) {\n      return [node.k, node.v]\n    } else {\n      return r\n    }\n  }\n\n  return findMaxKeyValue(node.l, value, field)\n}\n\nexport function insert<T>(node: AANode<T>, k: number, v: T): NonNilAANode<T> {\n  if (empty(node)) {\n    return newAANode(k, v, 1)\n  }\n  if (k === node.k) {\n    return clone(node, { k, v })\n  } else if (k < node.k) {\n    return rebalance(clone(node, { l: insert(node.l, k, v) }))\n  } else {\n    return rebalance(clone(node, { r: insert(node.r, k, v) }))\n  }\n}\n\nexport function walkWithin<T>(node: AANode<T>, start: number, end: number): NodeData<T>[] {\n  if (empty(node)) {\n    return []\n  }\n\n  const { k, v, l, r } = node\n  let result: NodeData<T>[] = []\n  if (k > start) {\n    result = result.concat(walkWithin(l, start, end))\n  }\n\n  if (k >= start && k <= end) {\n    result.push({ k, v })\n  }\n\n  if (k <= end) {\n    result = result.concat(walkWithin(r, start, end))\n  }\n\n  return result\n}\n\nexport function walk<T>(node: AANode<T>): NodeData<T>[] {\n  if (empty(node)) {\n    return []\n  }\n\n  return [...walk(node.l), { k: node.k, v: node.v }, ...walk(node.r)]\n}\n\nfunction last<T>(node: NonNilAANode<T>): [number, T] {\n  return empty(node.r) ? [node.k, node.v] : last(node.r)\n}\n\nfunction deleteLast<T>(node: NonNilAANode<T>): AANode<T> {\n  return empty(node.r) ? node.l : adjust(clone(node, { r: deleteLast(node.r) }))\n}\n\nfunction clone<T>(node: NonNilAANode<T>, args: Partial<NonNilAANode<T>>): NonNilAANode<T> {\n  return newAANode(\n    args.k !== undefined ? args.k : node.k,\n    args.v !== undefined ? args.v : node.v,\n    args.lvl !== undefined ? args.lvl : node.lvl,\n    args.l !== undefined ? args.l : node.l,\n    args.r !== undefined ? args.r : node.r\n  )\n}\n\nfunction isSingle(node: AANode<any>) {\n  return empty(node) || node.lvl > node.r.lvl\n}\n\nfunction rebalance<T>(node: NonNilAANode<T>): NonNilAANode<T> {\n  return split(skew(node))\n}\n\nfunction adjust<T>(node: NonNilAANode<T>): NonNilAANode<T> {\n  const { l, r, lvl } = node\n  if (r.lvl >= lvl - 1 && l.lvl >= lvl - 1) {\n    return node\n  } else if (lvl > r.lvl + 1) {\n    if (isSingle(l)) {\n      return skew(clone(node, { lvl: lvl - 1 }))\n    } else {\n      if (!empty(l) && !empty(l.r)) {\n        return clone(l.r, {\n          l: clone(l, { r: l.r.l }),\n          r: clone(node, {\n            l: l.r.r,\n            lvl: lvl - 1,\n          }),\n          lvl: lvl,\n        })\n      } else {\n        throw new Error('Unexpected empty nodes')\n      }\n    }\n  } else {\n    if (isSingle(node)) {\n      return split(clone(node, { lvl: lvl - 1 }))\n    } else {\n      if (!empty(r) && !empty(r.l)) {\n        const rl = r.l\n        const rlvl = isSingle(rl) ? r.lvl - 1 : r.lvl\n\n        return clone(rl, {\n          l: clone(node, {\n            r: rl.l,\n            lvl: lvl - 1,\n          }),\n          r: split(clone(r, { l: rl.r, lvl: rlvl })),\n          lvl: rl.lvl + 1,\n        })\n      } else {\n        throw new Error('Unexpected empty nodes')\n      }\n    }\n  }\n}\n\nexport function keys(node: AANode<any>): number[] {\n  if (empty(node)) {\n    return []\n  }\n  return [...keys(node.l), node.k, ...keys(node.r)]\n}\n\nexport function ranges<T>(node: AANode<T>): Range<T>[] {\n  return toRanges(walk(node))\n}\n\nexport function rangesWithin<T>(node: AANode<T>, startIndex: number, endIndex: number): Range<T>[] {\n  if (empty(node)) {\n    return []\n  }\n  const adjustedStart = findMaxKeyValue(node, startIndex)[0]\n  return toRanges(walkWithin(node, adjustedStart, endIndex))\n}\n\nexport function arrayToRanges<T, V>(\n  items: T[],\n  parser: (item: T) => { index: number; value: V }\n): Array<{ start: number; end: number; value: V }> {\n  const length = items.length\n  if (length === 0) {\n    return []\n  }\n\n  let { index: start, value } = parser(items[0])\n\n  const result = []\n\n  for (let i = 1; i < length; i++) {\n    const { index: nextIndex, value: nextValue } = parser(items[i])\n    result.push({ start, end: nextIndex - 1, value })\n\n    start = nextIndex\n    value = nextValue\n  }\n\n  result.push({ start, end: Infinity, value })\n  return result\n}\n\nfunction toRanges<T>(nodes: NodeData<T>[]): Range<T>[] {\n  return arrayToRanges(nodes, ({ k: index, v: value }) => ({ index, value }))\n}\n\nfunction split<T>(node: NonNilAANode<T>): NonNilAANode<T> {\n  const { r, lvl } = node\n\n  return !empty(r) && !empty(r.r) && r.lvl === lvl && r.r.lvl === lvl ? clone(r, { l: clone(node, { r: r.l }), lvl: lvl + 1 }) : node\n}\n\nfunction skew<T>(node: NonNilAANode<T>): NonNilAANode<T> {\n  const { l } = node\n\n  return !empty(l) && l.lvl === node.lvl ? clone(l, { r: clone(node, { l: l.r }) }) : node\n}\n","export type Comparator<T> = {\n  (item: T, value: number): -1 | 0 | 1\n}\n\nexport function findIndexOfClosestSmallerOrEqual<T>(items: T[], value: number, comparator: Comparator<T>, start = 0): number {\n  let end = items.length - 1\n\n  while (start <= end) {\n    const index = Math.floor((start + end) / 2)\n    const item = items[index]\n    const match = comparator(item, value)\n    if (match === 0) {\n      return index\n    }\n\n    if (match === -1) {\n      if (end - start < 2) {\n        return index - 1\n      }\n      end = index - 1\n    } else {\n      if (end === start) {\n        return index\n      }\n      start = index + 1\n    }\n  }\n\n  throw new Error(`Failed binary finding record in array - ${items.join(',')}, searched for ${value}`)\n}\n\nexport function findClosestSmallerOrEqual<T>(items: T[], value: number, comparator: Comparator<T>): T {\n  return items[findIndexOfClosestSmallerOrEqual(items, value, comparator)]\n}\n\nexport function findRange<T>(items: T[], startValue: number, endValue: number, comparator: Comparator<T>): T[] {\n  const startIndex = findIndexOfClosestSmallerOrEqual(items, startValue, comparator)\n  const endIndex = findIndexOfClosestSmallerOrEqual(items, endValue, comparator, startIndex)\n  return items.slice(startIndex, endIndex + 1)\n}\n","import * as u from '@virtuoso.dev/urx'\nimport { arrayToRanges, AANode, empty, findMaxKeyValue, insert, newTree, Range, rangesWithin, remove, walk } from './AATree'\nimport * as arrayBinarySearch from './utils/binaryArraySearch'\nimport { correctItemSize } from './utils/correctItemSize'\nimport { loggerSystem, Log, LogLevel } from './loggerSystem'\n\nexport interface SizeRange {\n  startIndex: number\n  endIndex: number\n  size: number\n}\n\nexport type Data = readonly unknown[] | undefined\n\nfunction rangeIncludes(refRange: SizeRange) {\n  const { size, startIndex, endIndex } = refRange\n  return (range: Range<number>) => {\n    return range.start === startIndex && (range.end === endIndex || range.end === Infinity) && range.value === size\n  }\n}\n\nexport function insertRanges(sizeTree: AANode<number>, ranges: SizeRange[]) {\n  let syncStart = empty(sizeTree) ? 0 : Infinity\n\n  for (const range of ranges) {\n    const { size, startIndex, endIndex } = range\n    syncStart = Math.min(syncStart, startIndex)\n\n    if (empty(sizeTree)) {\n      sizeTree = insert(sizeTree, 0, size)\n      continue\n    }\n\n    // extend the range in both directions, so that we can get adjacent neighbours.\n    // if the previous / next ones have the same value as the one we are about to insert,\n    // we 'merge' them.\n    const overlappingRanges = rangesWithin(sizeTree, startIndex - 1, endIndex + 1)\n\n    if (overlappingRanges.some(rangeIncludes(range))) {\n      continue\n    }\n\n    let firstPassDone = false\n    let shouldInsert = false\n    for (const { start: rangeStart, end: rangeEnd, value: rangeValue } of overlappingRanges) {\n      // previous range\n      if (!firstPassDone) {\n        shouldInsert = rangeValue !== size\n        firstPassDone = true\n      } else {\n        // remove the range if it starts within the new range OR if\n        // it has the same value as it, in order to perform a merge\n        if (endIndex >= rangeStart || size === rangeValue) {\n          sizeTree = remove(sizeTree, rangeStart)\n        }\n      }\n\n      // next range\n      if (rangeEnd > endIndex && endIndex >= rangeStart) {\n        if (rangeValue !== size) {\n          sizeTree = insert(sizeTree, endIndex + 1, rangeValue)\n        }\n      }\n    }\n\n    if (shouldInsert) {\n      sizeTree = insert(sizeTree, startIndex, size)\n    }\n  }\n  return [sizeTree, syncStart] as const\n}\n\nexport interface OffsetPoint {\n  offset: number\n  size: number\n  index: number\n}\n\nexport interface SizeState {\n  sizeTree: AANode<number>\n  offsetTree: Array<OffsetPoint>\n  groupOffsetTree: AANode<number>\n  lastIndex: number\n  lastOffset: number\n  lastSize: number\n  groupIndices: number[]\n}\n\nexport function initialSizeState(): SizeState {\n  return {\n    offsetTree: [],\n    sizeTree: newTree<number>(),\n    groupOffsetTree: newTree<number>(),\n    lastIndex: 0,\n    lastOffset: 0,\n    lastSize: 0,\n    groupIndices: [],\n  }\n}\n\nexport function indexComparator({ index: itemIndex }: OffsetPoint, index: number) {\n  return index === itemIndex ? 0 : index < itemIndex ? -1 : 1\n}\n\nexport function offsetComparator({ offset: itemOffset }: OffsetPoint, offset: number) {\n  return offset === itemOffset ? 0 : offset < itemOffset ? -1 : 1\n}\n\nfunction offsetPointParser(point: OffsetPoint) {\n  return { index: point.index, value: point }\n}\n\nexport function rangesWithinOffsets(\n  tree: Array<OffsetPoint>,\n  startOffset: number,\n  endOffset: number,\n  minStartIndex = 0\n): Array<{\n  start: number\n  end: number\n  value: {\n    size: number\n    offset: number\n    index: number\n  }\n}> {\n  if (minStartIndex > 0) {\n    startOffset = Math.max(startOffset, arrayBinarySearch.findClosestSmallerOrEqual(tree, minStartIndex, indexComparator).offset)\n  }\n\n  return arrayToRanges(arrayBinarySearch.findRange(tree, startOffset, endOffset, offsetComparator), offsetPointParser)\n}\n\nfunction createOffsetTree(prevOffsetTree: OffsetPoint[], syncStart: number, sizeTree: AANode<number>) {\n  let offsetTree = prevOffsetTree\n  let prevIndex = 0\n  let prevSize = 0\n\n  let prevOffset = 0\n  let startIndex = 0\n\n  if (syncStart !== 0) {\n    startIndex = arrayBinarySearch.findIndexOfClosestSmallerOrEqual(offsetTree, syncStart - 1, indexComparator)\n    const offsetInfo = offsetTree[startIndex]\n    prevOffset = offsetInfo.offset\n    const kv = findMaxKeyValue(sizeTree, syncStart - 1)\n    prevIndex = kv[0]\n    prevSize = kv[1]!\n\n    if (offsetTree.length && offsetTree[startIndex].size === findMaxKeyValue(sizeTree, syncStart)[1]) {\n      startIndex -= 1\n    }\n\n    offsetTree = offsetTree.slice(0, startIndex + 1)\n  } else {\n    offsetTree = []\n  }\n\n  for (const { start: startIndex, value } of rangesWithin(sizeTree, syncStart, Infinity)) {\n    const aOffset = (startIndex - prevIndex) * prevSize + prevOffset\n    offsetTree.push({\n      offset: aOffset,\n      size: value,\n      index: startIndex,\n    })\n    prevIndex = startIndex\n    prevOffset = aOffset\n    prevSize = value\n  }\n\n  return {\n    offsetTree,\n    lastIndex: prevIndex,\n    lastOffset: prevOffset,\n    lastSize: prevSize,\n  }\n}\n\nexport function sizeStateReducer(state: SizeState, [ranges, groupIndices, log]: [SizeRange[], number[], Log]) {\n  if (ranges.length > 0) {\n    log('received item sizes', ranges, LogLevel.DEBUG)\n  }\n  const sizeTree = state.sizeTree\n  let newSizeTree: AANode<number> = sizeTree\n  let syncStart = 0\n\n  // We receive probe item results from a group probe,\n  // which should always pass an item and a group\n  // the results contain two ranges, which we consider to mean that groups and items have different size\n  if (groupIndices.length > 0 && empty(sizeTree) && ranges.length === 2) {\n    const groupSize = ranges[0].size\n    const itemSize = ranges[1].size\n    newSizeTree = groupIndices.reduce((tree, groupIndex) => {\n      return insert(insert(tree, groupIndex, groupSize), groupIndex + 1, itemSize)\n    }, newSizeTree)\n  } else {\n    ;[newSizeTree, syncStart] = insertRanges(newSizeTree, ranges)\n  }\n\n  if (newSizeTree === sizeTree) {\n    return state\n  }\n\n  const { offsetTree: newOffsetTree, lastIndex, lastSize, lastOffset } = createOffsetTree(state.offsetTree, syncStart, newSizeTree)\n\n  return {\n    sizeTree: newSizeTree,\n    offsetTree: newOffsetTree,\n    lastIndex,\n    lastOffset,\n    lastSize,\n    groupOffsetTree: groupIndices.reduce((tree, index) => {\n      return insert(tree, index, offsetOf(index, newOffsetTree))\n    }, newTree<number>()),\n    groupIndices,\n  }\n}\n\nexport function offsetOf(index: number, tree: Array<OffsetPoint>) {\n  if (tree.length === 0) {\n    return 0\n  }\n\n  const { offset, index: startIndex, size } = arrayBinarySearch.findClosestSmallerOrEqual(tree, index, indexComparator)\n  return size * (index - startIndex) + offset\n}\n\nexport function originalIndexFromItemIndex(itemIndex: number, sizes: SizeState) {\n  if (!hasGroups(sizes)) {\n    return itemIndex\n  }\n\n  let groupOffset = 0\n  while (sizes.groupIndices[groupOffset] <= itemIndex + groupOffset) {\n    groupOffset++\n  }\n  // we find the real item index, offsetting it by the number of group items before it\n  return itemIndex + groupOffset\n}\n\nexport function hasGroups(sizes: SizeState) {\n  return !empty(sizes.groupOffsetTree)\n}\n\ntype OptionalNumber = number | undefined\n\nconst SIZE_MAP = {\n  offsetHeight: 'height',\n  offsetWidth: 'width',\n} as const\n\n/** Calculates the height of `el`, which will be the `Item` element in the DOM. */\nexport type SizeFunction = (el: HTMLElement, field: 'offsetHeight' | 'offsetWidth') => number\n\nexport const sizeSystem = u.system(\n  ([{ log }]) => {\n    const sizeRanges = u.stream<SizeRange[]>()\n    const totalCount = u.stream<number>()\n    const statefulTotalCount = u.statefulStreamFromEmitter(totalCount, 0)\n    const unshiftWith = u.stream<number>()\n    const shiftWith = u.stream<number>()\n    const firstItemIndex = u.statefulStream(0)\n    const groupIndices = u.statefulStream([] as number[])\n    const fixedItemSize = u.statefulStream<OptionalNumber>(undefined)\n    const defaultItemSize = u.statefulStream<OptionalNumber>(undefined)\n    const itemSize = u.statefulStream<SizeFunction>((el, field) => correctItemSize(el, SIZE_MAP[field]))\n    const data = u.statefulStream<Data>(undefined)\n    const initial = initialSizeState()\n\n    const sizes = u.statefulStreamFromEmitter(\n      u.pipe(sizeRanges, u.withLatestFrom(groupIndices, log), u.scan(sizeStateReducer, initial), u.distinctUntilChanged()),\n      initial\n    )\n\n    u.connect(\n      u.pipe(\n        groupIndices,\n        u.filter((indexes) => indexes.length > 0),\n        u.withLatestFrom(sizes),\n        u.map(([groupIndices, sizes]) => {\n          const groupOffsetTree = groupIndices.reduce((tree, index, idx) => {\n            return insert(tree, index, offsetOf(index, sizes.offsetTree) || idx)\n          }, newTree<number>())\n\n          return {\n            ...sizes,\n            groupIndices,\n            groupOffsetTree,\n          }\n        })\n      ),\n      sizes\n    )\n\n    // decreasing the total count should remove any existing entries\n    // beyond the last index - do this by publishing the default size as a range over them.\n    u.connect(\n      u.pipe(\n        totalCount,\n        u.withLatestFrom(sizes),\n        u.filter(([totalCount, { lastIndex }]) => {\n          return totalCount < lastIndex\n        }),\n        u.map(([totalCount, { lastIndex, lastSize }]) => {\n          return [\n            {\n              startIndex: totalCount,\n              endIndex: lastIndex,\n              size: lastSize,\n            },\n          ] as SizeRange[]\n        })\n      ),\n      sizeRanges\n    )\n\n    u.connect(fixedItemSize, defaultItemSize)\n\n    const trackItemSizes = u.statefulStreamFromEmitter(\n      u.pipe(\n        fixedItemSize,\n        u.map((size) => size === undefined)\n      ),\n      true\n    )\n\n    u.connect(\n      u.pipe(\n        defaultItemSize,\n        u.filter((value) => {\n          return value !== undefined && empty(u.getValue(sizes).sizeTree)\n        }),\n        u.map((size) => [{ startIndex: 0, endIndex: 0, size }] as SizeRange[])\n      ),\n      sizeRanges\n    )\n\n    const listRefresh = u.streamFromEmitter(\n      u.pipe(\n        sizeRanges,\n        u.withLatestFrom(sizes),\n        u.scan(\n          ({ sizes: oldSizes }, [_, newSizes]) => {\n            return {\n              changed: newSizes !== oldSizes,\n              sizes: newSizes,\n            }\n          },\n          { changed: false, sizes: initial }\n        ),\n        u.map((value) => value.changed)\n      )\n    )\n\n    u.subscribe(\n      u.pipe(\n        firstItemIndex,\n        u.scan(\n          (prev, next) => {\n            return { diff: prev.prev - next, prev: next }\n          },\n          { diff: 0, prev: 0 }\n        ),\n        u.map((val) => val.diff)\n      ),\n      (offset) => {\n        if (offset > 0) {\n          u.publish(unshiftWith, offset)\n        } else if (offset < 0) {\n          u.publish(shiftWith, offset)\n        }\n      }\n    )\n\n    u.subscribe(u.pipe(firstItemIndex, u.withLatestFrom(log)), ([index, log]) => {\n      if (index < 0) {\n        log(\n          \"`firstItemIndex` prop should not be set to less than zero. If you don't know the total count, just use a very high value\",\n          { firstItemIndex },\n          LogLevel.ERROR\n        )\n      }\n    })\n\n    // Capture the current list top item before the sizes get refreshed\n    const beforeUnshiftWith = u.streamFromEmitter(unshiftWith)\n\n    u.connect(\n      u.pipe(\n        unshiftWith,\n        u.withLatestFrom(sizes),\n        u.map(([unshiftWith, sizes]) => {\n          if (sizes.groupIndices.length > 0) {\n            throw new Error('Virtuoso: prepending items does not work with groups')\n          }\n\n          return walk(sizes.sizeTree).reduce(\n            (acc, { k: index, v: size }) => {\n              return {\n                ranges: [...acc.ranges, { startIndex: acc.prevIndex, endIndex: index + unshiftWith - 1, size: acc.prevSize }],\n                prevIndex: index + unshiftWith,\n                prevSize: size,\n              }\n            },\n            {\n              ranges: [] as SizeRange[],\n              prevIndex: 0,\n              prevSize: sizes.lastSize,\n            }\n          ).ranges\n        })\n      ),\n      sizeRanges\n    )\n\n    const shiftWithOffset = u.streamFromEmitter(\n      u.pipe(\n        shiftWith,\n        u.withLatestFrom(sizes),\n        u.map(([shiftWith, { offsetTree }]) => {\n          const newFirstItemIndex = -shiftWith\n          return offsetOf(newFirstItemIndex, offsetTree)\n        })\n      )\n    )\n\n    u.connect(\n      u.pipe(\n        shiftWith,\n        u.withLatestFrom(sizes),\n        u.map(([shiftWith, sizes]) => {\n          if (sizes.groupIndices.length > 0) {\n            throw new Error('Virtuoso: shifting items does not work with groups')\n          }\n\n          const newSizeTree = walk(sizes.sizeTree).reduce((acc, { k, v }) => {\n            return insert(acc, Math.max(0, k + shiftWith), v)\n          }, newTree<number>())\n\n          return {\n            ...sizes,\n            sizeTree: newSizeTree,\n            ...createOffsetTree(sizes.offsetTree, 0, newSizeTree),\n          }\n        })\n      ),\n      sizes\n    )\n\n    return {\n      // input\n      data,\n      totalCount,\n      sizeRanges,\n      groupIndices,\n      defaultItemSize,\n      fixedItemSize,\n      unshiftWith,\n      shiftWith,\n      shiftWithOffset,\n      beforeUnshiftWith,\n      firstItemIndex,\n\n      // output\n      sizes,\n      listRefresh,\n      statefulTotalCount,\n      trackItemSizes,\n      itemSize,\n    }\n  },\n  u.tup(loggerSystem),\n  { singleton: true }\n)\n","/* eslint-disable @typescript-eslint/no-unsafe-call */\nimport * as u from '@virtuoso.dev/urx'\nimport { findMaxKeyValue } from './AATree'\nimport { domIOSystem } from './domIOSystem'\nimport { offsetOf, originalIndexFromItemIndex, sizeSystem } from './sizeSystem'\nimport { IndexLocationWithAlign } from './interfaces'\nimport { loggerSystem, LogLevel } from './loggerSystem'\n\nexport type IndexLocation = number | IndexLocationWithAlign\n\nconst SUPPORTS_SCROLL_TO_OPTIONS = typeof document !== 'undefined' && 'scrollBehavior' in document.documentElement.style\n\nexport function normalizeIndexLocation(location: IndexLocation) {\n  const result: IndexLocationWithAlign = typeof location === 'number' ? { index: location } : location\n\n  if (!result.align) {\n    result.align = 'start'\n  }\n  if (!result.behavior || !SUPPORTS_SCROLL_TO_OPTIONS) {\n    result.behavior = 'auto'\n  }\n  if (!result.offset) {\n    result.offset = 0\n  }\n  return result as Required<IndexLocationWithAlign>\n}\n\nexport const scrollToIndexSystem = u.system(\n  ([\n    { sizes, totalCount, listRefresh },\n    { scrollingInProgress, viewportHeight, scrollTo, smoothScrollTargetReached, headerHeight, footerHeight },\n    { log },\n  ]) => {\n    const scrollToIndex = u.stream<IndexLocation>()\n    const topListHeight = u.statefulStream(0)\n\n    let unsubscribeNextListRefresh: any = null\n    let cleartTimeoutRef: any = null\n    let unsubscribeListRefresh: any = null\n\n    function cleanup() {\n      if (unsubscribeNextListRefresh) {\n        unsubscribeNextListRefresh()\n        unsubscribeNextListRefresh = null\n      }\n\n      if (unsubscribeListRefresh) {\n        unsubscribeListRefresh()\n        unsubscribeListRefresh = null\n      }\n\n      if (cleartTimeoutRef) {\n        clearTimeout(cleartTimeoutRef)\n        cleartTimeoutRef = null\n      }\n      u.publish(scrollingInProgress, false)\n    }\n\n    u.connect(\n      u.pipe(\n        scrollToIndex,\n        u.withLatestFrom(sizes, viewportHeight, totalCount, topListHeight, headerHeight, footerHeight, log),\n        u.map(([location, sizes, viewportHeight, totalCount, topListHeight, headerHeight, footerHeight, log]) => {\n          const normalLocation = normalizeIndexLocation(location)\n          const { align, behavior, offset } = normalLocation\n          const lastIndex = totalCount - 1\n          let index = normalLocation.index\n          if (index === 'LAST') {\n            index = lastIndex\n          }\n\n          index = originalIndexFromItemIndex(index, sizes)\n\n          index = Math.max(0, index, Math.min(lastIndex, index))\n\n          let top = offsetOf(index, sizes.offsetTree) + headerHeight\n          if (align === 'end') {\n            top = top - viewportHeight + findMaxKeyValue(sizes.sizeTree, index)[1]!\n            if (index === lastIndex) {\n              top += footerHeight\n            }\n          } else if (align === 'center') {\n            top = top - viewportHeight / 2 + findMaxKeyValue(sizes.sizeTree, index)[1]! / 2\n          } else {\n            top -= topListHeight\n          }\n\n          if (offset) {\n            top += offset\n          }\n\n          const retry = (listChanged: boolean) => {\n            cleanup()\n            if (listChanged) {\n              log('retrying to scroll to', { location }, LogLevel.DEBUG)\n              u.publish(scrollToIndex, location)\n            } else {\n              log('list did not change, scroll successful', {}, LogLevel.DEBUG)\n            }\n          }\n\n          cleanup()\n\n          if (behavior === 'smooth') {\n            let listChanged = false\n            unsubscribeListRefresh = u.subscribe(listRefresh, (changed) => {\n              listChanged = listChanged || changed\n            })\n\n            unsubscribeNextListRefresh = u.handleNext(smoothScrollTargetReached, () => {\n              retry(listChanged)\n            })\n          } else {\n            unsubscribeNextListRefresh = u.handleNext(u.pipe(listRefresh, watchChangesFor(50)), retry)\n          }\n\n          // if the scroll jump is too small, the list won't get rerendered.\n          // clean this listener\n          cleartTimeoutRef = setTimeout(() => {\n            cleanup()\n          }, 1200)\n\n          u.publish(scrollingInProgress, true)\n          log('scrolling from index to', { index, top, behavior }, LogLevel.DEBUG)\n          return { top, behavior }\n        })\n      ),\n      scrollTo\n    )\n\n    return {\n      scrollToIndex,\n      topListHeight,\n    }\n  },\n  u.tup(sizeSystem, domIOSystem, loggerSystem),\n  { singleton: true }\n)\n\nfunction watchChangesFor(limit: number): u.Operator<boolean> {\n  return (done) => {\n    const timeoutRef = setTimeout(() => {\n      done(false)\n    }, limit)\n    return (value) => {\n      if (value) {\n        done(true)\n        clearTimeout(timeoutRef)\n      }\n    }\n  }\n}\n","import * as u from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\n\nexport const UP = 'up' as const\nexport const DOWN = 'down' as const\nexport const NONE = 'none' as const\nexport type ScrollDirection = typeof UP | typeof DOWN | typeof NONE\n\nexport interface ListBottomInfo {\n  bottom: number\n  offsetBottom: number\n}\n\nexport interface AtBottomParams {\n  offsetBottom: number\n  scrollTop: number\n  viewportHeight: number\n  scrollHeight: number\n}\n\nexport type NotAtBottomReason =\n  | 'SIZE_INCREASED'\n  | 'NOT_SHOWING_LAST_ITEM'\n  | 'VIEWPORT_HEIGHT_DECREASING'\n  | 'SCROLLING_UPWARDS'\n  | 'NOT_FULLY_SCROLLED_TO_LAST_ITEM_BOTTOM'\n\nexport type AtBottomReason = 'SIZE_DECREASED' | 'SCROLLED_DOWN'\n\nexport type AtBottomState =\n  | {\n      atBottom: false\n      notAtBottomBecause: NotAtBottomReason\n      state: AtBottomParams\n    }\n  | {\n      atBottom: true\n      state: AtBottomParams\n      atBottomBecause: AtBottomReason\n      scrollTopDelta: number\n    }\n\nconst INITIAL_BOTTOM_STATE = {\n  atBottom: false,\n  notAtBottomBecause: 'NOT_SHOWING_LAST_ITEM',\n  state: {\n    offsetBottom: 0,\n    scrollTop: 0,\n    viewportHeight: 0,\n    scrollHeight: 0,\n  },\n} as AtBottomState\n\nexport const stateFlagsSystem = u.system(([{ scrollContainerState, scrollTop, viewportHeight, headerHeight, footerHeight, scrollBy }]) => {\n  const isAtBottom = u.statefulStream(false)\n  const isAtTop = u.statefulStream(true)\n  const atBottomStateChange = u.stream<boolean>()\n  const atTopStateChange = u.stream<boolean>()\n  const atBottomThreshold = u.statefulStream(4)\n\n  // skip 1 to avoid an initial on/off flick\n  const isScrolling = u.streamFromEmitter(\n    u.pipe(\n      u.merge(u.pipe(u.duc(scrollTop), u.skip(1), u.mapTo(true)), u.pipe(u.duc(scrollTop), u.skip(1), u.mapTo(false), u.debounceTime(100))),\n      u.distinctUntilChanged()\n    )\n  )\n\n  const isScrollingBy = u.statefulStreamFromEmitter(\n    u.pipe(u.merge(u.pipe(scrollBy, u.mapTo(true)), u.pipe(scrollBy, u.mapTo(false), u.debounceTime(200))), u.distinctUntilChanged()),\n    false\n  )\n\n  // u.subscribe(isScrollingBy, (isScrollingBy) => console.log({ isScrollingBy }))\n\n  u.connect(\n    u.pipe(\n      u.duc(scrollTop),\n      u.map((top) => top === 0),\n      u.distinctUntilChanged()\n    ),\n    isAtTop\n  )\n\n  u.connect(isAtTop, atTopStateChange)\n\n  const atBottomState = u.streamFromEmitter(\n    u.pipe(\n      u.combineLatest(scrollContainerState, u.duc(viewportHeight), u.duc(headerHeight), u.duc(footerHeight), u.duc(atBottomThreshold)),\n      u.scan((current, [[scrollTop, scrollHeight], viewportHeight, _headerHeight, _footerHeight, atBottomThreshold]) => {\n        const isAtBottom = scrollTop + viewportHeight - scrollHeight > -atBottomThreshold\n        const state = {\n          viewportHeight,\n          scrollTop,\n          scrollHeight,\n        }\n\n        if (isAtBottom) {\n          let atBottomBecause: 'SIZE_DECREASED' | 'SCROLLED_DOWN'\n          let scrollTopDelta: number\n          if (scrollTop > current.state.scrollTop) {\n            atBottomBecause = 'SCROLLED_DOWN'\n            scrollTopDelta = current.state.scrollTop - scrollTop\n          } else {\n            atBottomBecause = 'SIZE_DECREASED'\n            scrollTopDelta = current.state.scrollTop - scrollTop || (current as { scrollTopDelta: number }).scrollTopDelta\n          }\n          return {\n            atBottom: true,\n            state,\n            atBottomBecause,\n            scrollTopDelta,\n          } as AtBottomState\n        }\n\n        let notAtBottomBecause: NotAtBottomReason\n\n        if (state.scrollHeight > current.state.scrollHeight) {\n          notAtBottomBecause = 'SIZE_INCREASED'\n        } else if (viewportHeight < current.state.viewportHeight) {\n          notAtBottomBecause = 'VIEWPORT_HEIGHT_DECREASING'\n        } else if (scrollTop < current.state.scrollTop) {\n          notAtBottomBecause = 'SCROLLING_UPWARDS'\n        } else {\n          notAtBottomBecause = 'NOT_FULLY_SCROLLED_TO_LAST_ITEM_BOTTOM'\n        }\n\n        return {\n          atBottom: false,\n          notAtBottomBecause,\n          state,\n        } as AtBottomState\n      }, INITIAL_BOTTOM_STATE),\n      u.distinctUntilChanged((prev, next) => {\n        return prev && prev.atBottom === next.atBottom\n      })\n    )\n  )\n\n  const lastJumpDueToItemResize = u.statefulStreamFromEmitter(\n    u.pipe(\n      scrollContainerState,\n      u.scan(\n        (current, [scrollTop, scrollHeight]) => {\n          if (current.scrollHeight !== scrollHeight) {\n            if (current.scrollTop !== scrollTop) {\n              return {\n                scrollHeight,\n                scrollTop,\n                jump: current.scrollTop - scrollTop,\n                changed: true,\n              }\n            } else {\n              return {\n                scrollHeight,\n                scrollTop,\n                jump: 0,\n                changed: true,\n              }\n            }\n          } else {\n            return {\n              scrollTop,\n              scrollHeight,\n              jump: 0,\n              changed: false,\n            }\n          }\n        },\n        { scrollHeight: 0, jump: 0, scrollTop: 0, changed: false }\n      ),\n      u.filter((value) => value.changed),\n      u.map((value) => value.jump)\n    ),\n    0\n  )\n\n  u.connect(\n    u.pipe(\n      atBottomState,\n      u.map((state) => state.atBottom)\n    ),\n    isAtBottom\n  )\n\n  u.connect(u.pipe(isAtBottom, u.throttleTime(50)), atBottomStateChange)\n\n  const scrollDirection = u.statefulStream<ScrollDirection>(DOWN)\n\n  u.connect(\n    u.pipe(\n      scrollContainerState,\n      u.map(([scrollTop]) => scrollTop),\n      u.distinctUntilChanged(),\n      u.scan(\n        (acc, scrollTop) => {\n          // if things change while compensating for items, ignore,\n          // but store the new scrollTop\n          if (u.getValue(isScrollingBy)) {\n            return { direction: acc.direction, prevScrollTop: scrollTop }\n          }\n\n          return { direction: scrollTop < acc.prevScrollTop ? UP : DOWN, prevScrollTop: scrollTop }\n        },\n        { direction: DOWN, prevScrollTop: 0 } as { direction: ScrollDirection; prevScrollTop: number }\n      ),\n      u.map((value) => value.direction)\n    ),\n    scrollDirection\n  )\n\n  u.connect(u.pipe(scrollContainerState, u.throttleTime(50), u.mapTo(NONE)), scrollDirection)\n\n  const scrollVelocity = u.statefulStream(0)\n\n  u.connect(\n    u.pipe(\n      isScrolling,\n      u.filter((value) => !value),\n      u.mapTo(0)\n    ),\n    scrollVelocity\n  )\n\n  u.connect(\n    u.pipe(\n      scrollTop,\n      u.throttleTime(100),\n      u.withLatestFrom(isScrolling),\n      u.filter(([_, isScrolling]) => !!isScrolling),\n      u.scan(([_, prev], [next]) => [prev, next], [0, 0]),\n      u.map(([prev, next]) => next - prev)\n    ),\n    scrollVelocity\n  )\n\n  return {\n    isScrolling,\n    isAtTop,\n    isAtBottom,\n    atBottomState,\n    atTopStateChange,\n    atBottomStateChange,\n    scrollDirection,\n    atBottomThreshold,\n    scrollVelocity,\n    lastJumpDueToItemResize,\n  }\n}, u.tup(domIOSystem))\n","import * as u from '@virtuoso.dev/urx'\nimport { getValue, tup } from '@virtuoso.dev/urx'\nimport { loggerSystem, LogLevel } from './loggerSystem'\n\nexport const propsReadySystem = u.system(\n  ([{ log }]) => {\n    const propsReady = u.statefulStream(false)\n\n    const didMount = u.streamFromEmitter(\n      u.pipe(\n        propsReady,\n        u.filter((ready) => ready),\n        u.distinctUntilChanged()\n      )\n    )\n    u.subscribe(propsReady, (value) => {\n      value && getValue(log)('props updated', {}, LogLevel.DEBUG)\n    })\n\n    return { propsReady, didMount }\n  },\n  tup(loggerSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { empty } from './AATree'\nimport { sizeSystem } from './sizeSystem'\nimport { domIOSystem } from './domIOSystem'\nimport { IndexLocation, scrollToIndexSystem } from './scrollToIndexSystem'\nimport { propsReadySystem } from './propsReadySystem'\n\nexport function getInitialTopMostItemIndexNumber(location: IndexLocation, totalCount: number): number {\n  const lastIndex = totalCount - 1\n  const index = typeof location === 'number' ? location : location.index === 'LAST' ? lastIndex : location.index\n  return index\n}\n\nexport const initialTopMostItemIndexSystem = u.system(\n  ([{ sizes, listRefresh, defaultItemSize }, { scrollTop }, { scrollToIndex }, { didMount }]) => {\n    const scrolledToInitialItem = u.statefulStream(true)\n    const initialTopMostItemIndex = u.statefulStream<IndexLocation>(0)\n\n    u.connect(\n      u.pipe(\n        didMount,\n        u.withLatestFrom(initialTopMostItemIndex),\n        u.filter(([_, location]) => !!location),\n        u.mapTo(false)\n      ),\n      scrolledToInitialItem\n    )\n\n    u.subscribe(\n      u.pipe(\n        u.combineLatest(listRefresh, didMount),\n        u.withLatestFrom(scrolledToInitialItem, sizes, defaultItemSize),\n        u.filter(([[, didMount], scrolledToInitialItem, { sizeTree }, defaultItemSize]) => {\n          return didMount && (!empty(sizeTree) || defaultItemSize !== undefined) && !scrolledToInitialItem\n        }),\n        u.withLatestFrom(initialTopMostItemIndex)\n      ),\n      ([, initialTopMostItemIndex]) => {\n        setTimeout(() => {\n          u.handleNext(scrollTop, () => {\n            u.publish(scrolledToInitialItem, true)\n          })\n          u.publish(scrollToIndex, initialTopMostItemIndex)\n        })\n      }\n    )\n\n    return {\n      scrolledToInitialItem,\n      initialTopMostItemIndex,\n    }\n  },\n  u.tup(sizeSystem, domIOSystem, scrollToIndexSystem, propsReadySystem),\n  { singleton: true }\n)\n","/* eslint-disable @typescript-eslint/no-unsafe-call */\nimport * as u from '@virtuoso.dev/urx'\nimport { scrollToIndexSystem } from './scrollToIndexSystem'\nimport { sizeSystem } from './sizeSystem'\nimport { stateFlagsSystem } from './stateFlagsSystem'\nimport { initialTopMostItemIndexSystem } from './initialTopMostItemIndexSystem'\nimport { FollowOutput, FollowOutputScalarType } from './interfaces'\nimport { propsReadySystem } from './propsReadySystem'\nimport { loggerSystem, LogLevel } from './loggerSystem'\nimport { domIOSystem } from './domIOSystem'\n\nfunction normalizeFollowOutput(follow: FollowOutputScalarType): FollowOutputScalarType {\n  if (!follow) {\n    return false\n  }\n  return follow === 'smooth' ? 'smooth' : 'auto'\n}\n\nconst behaviorFromFollowOutput = (follow: FollowOutput, isAtBottom: boolean) => {\n  if (typeof follow === 'function') {\n    return normalizeFollowOutput(follow(isAtBottom))\n  }\n  return isAtBottom && normalizeFollowOutput(follow)\n}\n\nexport const followOutputSystem = u.system(\n  ([\n    { totalCount, listRefresh },\n    { isAtBottom, atBottomState },\n    { scrollToIndex },\n    { scrolledToInitialItem },\n    { propsReady, didMount },\n    { log },\n    { scrollingInProgress },\n  ]) => {\n    const followOutput = u.statefulStream<FollowOutput>(false)\n    let pendingScrollHandle: any = null\n\n    function scrollToBottom(followOutputBehavior: FollowOutputScalarType) {\n      u.publish(scrollToIndex, {\n        index: 'LAST',\n        align: 'end',\n        behavior: followOutputBehavior,\n      })\n    }\n\n    u.subscribe(\n      u.pipe(\n        u.combineLatest(u.pipe(u.duc(totalCount), u.skip(1)), didMount),\n        u.withLatestFrom(u.duc(followOutput), isAtBottom, scrolledToInitialItem, scrollingInProgress),\n        u.map(([[totalCount, didMount], followOutput, isAtBottom, scrolledToInitialItem, scrollingInProgress]) => {\n          let shouldFollow = didMount && scrolledToInitialItem\n          let followOutputBehavior: FollowOutputScalarType = 'auto'\n\n          if (shouldFollow) {\n            // if scrolling to index is in progress,\n            // assume that a previous followOutput response is going\n            followOutputBehavior = behaviorFromFollowOutput(followOutput, isAtBottom || scrollingInProgress)\n            shouldFollow = shouldFollow && !!followOutputBehavior\n          }\n\n          return { totalCount, shouldFollow, followOutputBehavior }\n        }),\n        u.filter(({ shouldFollow }) => shouldFollow)\n      ),\n      ({ totalCount, followOutputBehavior }) => {\n        if (pendingScrollHandle) {\n          pendingScrollHandle()\n          pendingScrollHandle = null\n        }\n\n        pendingScrollHandle = u.handleNext(listRefresh, () => {\n          u.getValue(log)('following output to ', { totalCount }, LogLevel.DEBUG)\n          scrollToBottom(followOutputBehavior)\n          pendingScrollHandle = null\n        })\n      }\n    )\n\n    u.subscribe(\n      u.pipe(\n        u.combineLatest(u.duc(followOutput), totalCount, propsReady),\n        u.filter(([follow, , ready]) => follow && ready),\n        u.scan(\n          ({ value }, [, next]) => {\n            return { refreshed: value === next, value: next }\n          },\n          { refreshed: false, value: 0 }\n        ),\n        u.filter(({ refreshed }) => refreshed),\n        u.withLatestFrom(followOutput, totalCount)\n      ),\n      ([, followOutput]) => {\n        const cancel = u.handleNext(atBottomState, (state) => {\n          if (followOutput && !state.atBottom && state.notAtBottomBecause === 'SIZE_INCREASED' && !pendingScrollHandle) {\n            u.getValue(log)('scrolling to bottom due to increased size', {}, LogLevel.DEBUG)\n            scrollToBottom('auto')\n          }\n        })\n        setTimeout(cancel, 100)\n      }\n    )\n\n    u.subscribe(u.combineLatest(u.duc(followOutput), atBottomState), ([followOutput, state]) => {\n      if (followOutput && !state.atBottom && state.notAtBottomBecause === 'VIEWPORT_HEIGHT_DECREASING') {\n        scrollToBottom('auto')\n      }\n    })\n\n    return { followOutput }\n  },\n  u.tup(sizeSystem, stateFlagsSystem, scrollToIndexSystem, initialTopMostItemIndexSystem, propsReadySystem, loggerSystem, domIOSystem)\n)\n","import {\n  combineLatest,\n  connect,\n  distinctUntilChanged,\n  system,\n  filter,\n  map,\n  pipe,\n  prop,\n  stream,\n  streamFromEmitter,\n  tup,\n} from '@virtuoso.dev/urx'\nimport { findMaxKeyValue } from './AATree'\nimport { domIOSystem } from './domIOSystem'\nimport { sizeSystem, hasGroups } from './sizeSystem'\nexport interface GroupIndexesAndCount {\n  totalCount: number\n  groupIndices: number[]\n}\n\nexport function groupCountsToIndicesAndCount(counts: number[]) {\n  return counts.reduce(\n    (acc, groupCount) => {\n      acc.groupIndices.push(acc.totalCount)\n      acc.totalCount += groupCount + 1\n      return acc\n    },\n    {\n      totalCount: 0,\n      groupIndices: [],\n    } as GroupIndexesAndCount\n  )\n}\n\nexport const groupedListSystem = system(([{ totalCount, groupIndices, sizes }, { scrollTop, headerHeight }]) => {\n  const groupCounts = stream<number[]>()\n  const topItemsIndexes = stream<[number]>()\n  const groupIndicesAndCount = streamFromEmitter(pipe(groupCounts, map(groupCountsToIndicesAndCount)))\n  connect(pipe(groupIndicesAndCount, map(prop('totalCount'))), totalCount)\n  connect(pipe(groupIndicesAndCount, map(prop('groupIndices'))), groupIndices)\n\n  connect(\n    pipe(\n      combineLatest(scrollTop, sizes, headerHeight),\n      filter(([_, sizes]) => hasGroups(sizes)),\n      map(([scrollTop, state, headerHeight]) => findMaxKeyValue(state.groupOffsetTree, Math.max(scrollTop - headerHeight, 0), 'v')[0]),\n      distinctUntilChanged(),\n      map((index) => [index])\n    ),\n    topItemsIndexes\n  )\n\n  return { groupCounts, topItemsIndexes }\n}, tup(sizeSystem, domIOSystem))\n","import { ListRange } from './interfaces'\n\nexport function tupleComparator(prev: [any, any] | undefined, current: [any, any]) {\n  return !!(prev && prev[0] === current[0] && prev[1] === current[1])\n}\n\nexport function rangeComparator(prev: ListRange | undefined, next: ListRange) {\n  return !!(prev && prev.startIndex === next.startIndex && prev.endIndex === next.endIndex)\n}\n","import * as u from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\nimport { UP, DOWN, ScrollDirection } from './stateFlagsSystem'\nimport { tupleComparator } from './comparators'\n\nexport type NumberTuple = [number, number]\nexport type Overscan = number | { main: number; reverse: number }\nexport const TOP = 'top' as const\nexport const BOTTOM = 'bottom' as const\nexport const NONE = 'none' as const\nexport type ListEnd = typeof TOP | typeof BOTTOM\nexport type ViewportIncrease = number | { [k in ListEnd]?: number }\nexport type ChangeDirection = typeof UP | typeof DOWN | typeof NONE\n\nexport function getOverscan(overscan: Overscan, end: ListEnd, direction: ScrollDirection) {\n  if (typeof overscan === 'number') {\n    return (direction === UP && end === TOP) || (direction === DOWN && end === BOTTOM) ? overscan : 0\n  } else {\n    if (direction === UP) {\n      return end === TOP ? overscan.main : overscan.reverse\n    } else {\n      return end === BOTTOM ? overscan.main : overscan.reverse\n    }\n  }\n}\n\nfunction getViewportIncrease(value: ViewportIncrease, end: ListEnd) {\n  return typeof value === 'number' ? value : value[end] || 0\n}\n\nexport const sizeRangeSystem = u.system(\n  ([{ scrollTop, viewportHeight, deviation, headerHeight }]) => {\n    const listBoundary = u.stream<NumberTuple>()\n    const topListHeight = u.statefulStream(0)\n    const fixedHeaderHeight = u.statefulStream(0)\n    const increaseViewportBy = u.statefulStream<ViewportIncrease>(0)\n    const overscan = u.statefulStream<Overscan>(0)\n\n    const visibleRange = u.statefulStreamFromEmitter(\n      u.pipe(\n        u.combineLatest(\n          u.duc(scrollTop),\n          u.duc(viewportHeight),\n          u.duc(headerHeight),\n          u.duc(listBoundary, tupleComparator),\n          u.duc(overscan),\n          u.duc(topListHeight),\n          u.duc(fixedHeaderHeight),\n          u.duc(deviation),\n          u.duc(increaseViewportBy)\n        ),\n        u.map(\n          ([\n            scrollTop,\n            viewportHeight,\n            headerHeight,\n            [listTop, listBottom],\n            overscan,\n            topListHeight,\n            fixedHeaderHeight,\n            deviation,\n            increaseViewportBy,\n          ]) => {\n            const top = scrollTop - deviation\n            const stickyHeaderHeight = topListHeight + fixedHeaderHeight\n            const headerVisible = Math.max(headerHeight - top, 0)\n            let direction: ChangeDirection = NONE\n            const topViewportAddition = getViewportIncrease(increaseViewportBy, TOP)\n            const bottomViewportAddition = getViewportIncrease(increaseViewportBy, BOTTOM)\n\n            listTop -= deviation\n            listTop += headerHeight + fixedHeaderHeight\n            listBottom += headerHeight + fixedHeaderHeight\n            listBottom -= deviation\n\n            // console.log({ listTop, scrollTop, stickyHeaderHeight, topViewportAddition })\n            if (listTop > scrollTop + stickyHeaderHeight - topViewportAddition) {\n              direction = UP\n            }\n\n            if (listBottom < scrollTop - headerVisible + viewportHeight + bottomViewportAddition) {\n              direction = DOWN\n            }\n\n            if (direction !== NONE) {\n              return [\n                Math.max(top - headerHeight - getOverscan(overscan, TOP, direction) - topViewportAddition, 0),\n                top -\n                  headerVisible -\n                  fixedHeaderHeight +\n                  viewportHeight +\n                  getOverscan(overscan, BOTTOM, direction) +\n                  bottomViewportAddition,\n              ] as NumberTuple\n            }\n\n            return null\n          }\n        ),\n        u.filter((value) => value != null),\n        u.distinctUntilChanged(tupleComparator as any)\n      ),\n      [0, 0]\n    ) as unknown as u.StatefulStream<NumberTuple>\n\n    return {\n      // input\n      listBoundary,\n      overscan,\n      topListHeight,\n      fixedHeaderHeight,\n      increaseViewportBy,\n\n      // output\n      visibleRange,\n    }\n  },\n  u.tup(domIOSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { empty, findMaxKeyValue, Range, rangesWithin } from './AATree'\nimport { groupedListSystem } from './groupedListSystem'\nimport { getInitialTopMostItemIndexNumber, initialTopMostItemIndexSystem } from './initialTopMostItemIndexSystem'\nimport { Item, ListItem, ListRange } from './interfaces'\nimport { propsReadySystem } from './propsReadySystem'\nimport { scrollToIndexSystem } from './scrollToIndexSystem'\nimport { sizeRangeSystem } from './sizeRangeSystem'\nimport { Data, originalIndexFromItemIndex, SizeState, sizeSystem, hasGroups, rangesWithinOffsets } from './sizeSystem'\nimport { stateFlagsSystem } from './stateFlagsSystem'\nimport { rangeComparator, tupleComparator } from './comparators'\n\nexport type ListItems = ListItem<unknown>[]\nexport interface TopListState {\n  items: ListItems\n  listHeight: number\n}\n\nexport interface ListState {\n  items: ListItems\n  topItems: ListItems\n  topListHeight: number\n  offsetTop: number\n  offsetBottom: number\n  top: number\n  bottom: number\n  totalCount: number\n}\n\nfunction probeItemSet(index: number, sizes: SizeState, data: Data) {\n  if (hasGroups(sizes)) {\n    const itemIndex = originalIndexFromItemIndex(index, sizes)\n    const groupIndex = findMaxKeyValue(sizes.groupOffsetTree, itemIndex)[0]\n\n    return [\n      { index: groupIndex, size: 0, offset: 0 },\n      { index: itemIndex, size: 0, offset: 0, data: data && data[0] },\n    ]\n  }\n  return [{ index, size: 0, offset: 0, data: data && data[0] }]\n}\n\nconst EMPTY_LIST_STATE: ListState = {\n  items: [] as ListItems,\n  topItems: [] as ListItems,\n  offsetTop: 0,\n  offsetBottom: 0,\n  top: 0,\n  bottom: 0,\n  topListHeight: 0,\n  totalCount: 0,\n}\n\nfunction transposeItems(items: Item<any>[], sizes: SizeState, firstItemIndex: number): ListItems {\n  if (items.length === 0) {\n    return []\n  }\n\n  if (!hasGroups(sizes)) {\n    return items.map((item) => ({ ...item, index: item.index + firstItemIndex, originalIndex: item.index }))\n  }\n\n  const startIndex = items[0].index\n  const endIndex = items[items.length - 1].index\n\n  const transposedItems = [] as ListItems\n  const groupRanges = rangesWithin(sizes.groupOffsetTree, startIndex, endIndex)\n  let currentRange: Range<number> | undefined = undefined\n  let currentGroupIndex = 0\n\n  for (const item of items) {\n    if (!currentRange || currentRange.end < item.index) {\n      currentRange = groupRanges.shift()!\n      currentGroupIndex = sizes.groupIndices.indexOf(currentRange.start)\n    }\n\n    let transposedItem: { type: 'group'; index: number } | { index: number; groupIndex: number }\n\n    if (item.index === currentRange.start) {\n      transposedItem = {\n        type: 'group' as const,\n        index: currentGroupIndex,\n      }\n    } else {\n      transposedItem = {\n        index: item.index - (currentGroupIndex + 1) + firstItemIndex,\n        groupIndex: currentGroupIndex,\n      }\n    }\n\n    transposedItems.push({\n      ...transposedItem,\n      size: item.size,\n      offset: item.offset,\n      originalIndex: item.index,\n      data: item.data,\n    })\n  }\n\n  return transposedItems\n}\n\nexport function buildListState(\n  items: Item<any>[],\n  topItems: Item<any>[],\n  totalCount: number,\n  sizes: SizeState,\n  firstItemIndex: number\n): ListState {\n  const { lastSize, lastOffset, lastIndex } = sizes\n  let offsetTop = 0\n  let bottom = 0\n\n  if (items.length > 0) {\n    offsetTop = items[0].offset\n    const lastItem = items[items.length - 1]\n    bottom = lastItem.offset + lastItem.size\n  }\n\n  const total = lastOffset + (totalCount - lastIndex) * lastSize\n  const top = offsetTop\n  const offsetBottom = total - bottom\n\n  return {\n    items: transposeItems(items, sizes, firstItemIndex),\n    topItems: transposeItems(topItems, sizes, firstItemIndex),\n    topListHeight: topItems.reduce((height, item) => item.size + height, 0),\n    offsetTop,\n    offsetBottom,\n    top,\n    bottom,\n    totalCount,\n  }\n}\n\nexport const listStateSystem = u.system(\n  ([\n    { sizes, totalCount, data, firstItemIndex },\n    groupedListSystem,\n    { visibleRange, listBoundary, topListHeight: rangeTopListHeight },\n    { scrolledToInitialItem, initialTopMostItemIndex },\n    { topListHeight },\n    stateFlags,\n    { didMount },\n  ]) => {\n    const topItemsIndexes = u.statefulStream<Array<number>>([])\n    const itemsRendered = u.stream<ListItems>()\n\n    u.connect(groupedListSystem.topItemsIndexes, topItemsIndexes)\n\n    const listState = u.statefulStreamFromEmitter(\n      u.pipe(\n        u.combineLatest(\n          didMount,\n          u.duc(visibleRange),\n          u.duc(totalCount),\n          u.duc(sizes),\n          u.duc(initialTopMostItemIndex),\n          scrolledToInitialItem,\n          u.duc(topItemsIndexes),\n          u.duc(firstItemIndex),\n          data\n        ),\n        u.filter(([mount]) => mount),\n        u.map(\n          ([\n            ,\n            [startOffset, endOffset],\n            totalCount,\n            sizes,\n            initialTopMostItemIndex,\n            scrolledToInitialItem,\n            topItemsIndexes,\n            firstItemIndex,\n            data,\n          ]) => {\n            const sizesValue = sizes\n            const { sizeTree, offsetTree } = sizesValue\n\n            if (totalCount === 0 || (startOffset === 0 && endOffset === 0)) {\n              return EMPTY_LIST_STATE\n            }\n\n            if (empty(sizeTree)) {\n              return buildListState(\n                probeItemSet(getInitialTopMostItemIndexNumber(initialTopMostItemIndex, totalCount), sizesValue, data),\n                [],\n                totalCount,\n                sizesValue,\n                firstItemIndex\n              )\n            }\n\n            const topItems = [] as Item<any>[]\n\n            if (topItemsIndexes.length > 0) {\n              const startIndex = topItemsIndexes[0]\n              const endIndex = topItemsIndexes[topItemsIndexes.length - 1]\n              let offset = 0\n              for (const range of rangesWithin(sizeTree, startIndex, endIndex)) {\n                const size = range.value\n                const rangeStartIndex = Math.max(range.start, startIndex)\n                const rangeEndIndex = Math.min(range.end, endIndex)\n                for (let i = rangeStartIndex; i <= rangeEndIndex; i++) {\n                  topItems.push({ index: i, size, offset: offset, data: data && data[i] })\n                  offset += size\n                }\n              }\n            }\n\n            // If the list hasn't scrolled to the initial item because the initial item was set,\n            // render empty list.\n            //\n            // This is a condition to be evaluated past the probe check, do not merge\n            // with the totalCount check above\n            if (!scrolledToInitialItem) {\n              return buildListState([], topItems, totalCount, sizesValue, firstItemIndex)\n            }\n\n            const minStartIndex = topItemsIndexes.length > 0 ? topItemsIndexes[topItemsIndexes.length - 1] + 1 : 0\n\n            const offsetPointRanges = rangesWithinOffsets(offsetTree, startOffset, endOffset, minStartIndex)\n            if (offsetPointRanges.length === 0) {\n              return null\n            }\n\n            const maxIndex = totalCount - 1\n\n            const items = u.tap([] as Item<any>[], (result) => {\n              for (const range of offsetPointRanges) {\n                const point = range.value\n                let offset = point.offset\n                let rangeStartIndex = range.start\n                const size = point.size\n\n                if (point.offset < startOffset) {\n                  rangeStartIndex += Math.floor((startOffset - point.offset) / size)\n                  offset += (rangeStartIndex - range.start) * size\n                }\n\n                if (rangeStartIndex < minStartIndex) {\n                  offset += (minStartIndex - rangeStartIndex) * size\n                  rangeStartIndex = minStartIndex\n                }\n\n                const endIndex = Math.min(range.end, maxIndex)\n\n                for (let i = rangeStartIndex; i <= endIndex; i++) {\n                  if (offset >= endOffset) {\n                    break\n                  }\n\n                  result.push({ index: i, size, offset: offset, data: data && data[i] })\n                  offset += size\n                }\n              }\n            })\n\n            return buildListState(items, topItems, totalCount, sizesValue, firstItemIndex)\n          }\n        ),\n        //@ts-expect-error filter needs to be fixed\n        u.filter((value) => value !== null),\n        u.distinctUntilChanged()\n      ),\n      EMPTY_LIST_STATE\n    )\n\n    u.connect(\n      u.pipe(\n        data,\n        u.filter((data) => data !== undefined),\n        u.map((data) => data!.length)\n      ),\n      totalCount\n    )\n\n    u.connect(u.pipe(listState, u.map(u.prop('topListHeight'))), topListHeight)\n    u.connect(topListHeight, rangeTopListHeight)\n\n    u.connect(\n      u.pipe(\n        listState,\n        u.map((state) => [state.top, state.bottom])\n      ),\n      listBoundary\n    )\n\n    u.connect(\n      u.pipe(\n        listState,\n        u.map((state) => state.items)\n      ),\n      itemsRendered\n    )\n\n    const endReached = u.streamFromEmitter(\n      u.pipe(\n        listState,\n        u.filter(({ items }) => items.length > 0),\n        u.withLatestFrom(totalCount, data),\n        u.filter(([{ items }, totalCount]) => items[items.length - 1].originalIndex === totalCount - 1),\n        u.map(([, totalCount, data]) => [totalCount - 1, data] as [number, unknown[]]),\n        u.distinctUntilChanged(tupleComparator),\n        u.map(([count]) => count as number)\n      )\n    )\n\n    const startReached = u.streamFromEmitter(\n      u.pipe(\n        listState,\n        u.throttleTime(200),\n        u.filter(({ items, topItems }) => {\n          return items.length > 0 && items[0].originalIndex === topItems.length\n        }),\n        u.map(({ items }) => items[0].index),\n        u.distinctUntilChanged()\n      )\n    )\n\n    const rangeChanged = u.streamFromEmitter(\n      u.pipe(\n        listState,\n        u.filter(({ items }) => items.length > 0),\n        u.map(({ items }) => {\n          return {\n            startIndex: items[0].index,\n            endIndex: items[items.length - 1].index,\n          } as ListRange\n        }),\n        u.distinctUntilChanged(rangeComparator)\n      )\n    )\n\n    return { listState, topItemsIndexes, endReached, startReached, rangeChanged, itemsRendered, ...stateFlags }\n  },\n  u.tup(\n    sizeSystem,\n    groupedListSystem,\n    sizeRangeSystem,\n    initialTopMostItemIndexSystem,\n    scrollToIndexSystem,\n    stateFlagsSystem,\n    propsReadySystem\n  ),\n  { singleton: true }\n)\n","export function simpleMemoize<T extends () => any>(func: T): T {\n  let called = false\n  let result: unknown\n\n  return (() => {\n    if (!called) {\n      called = true\n      result = func()\n    }\n    return result\n  }) as T\n}\n","import * as u from '@virtuoso.dev/urx'\nimport { listStateSystem, buildListState } from './listStateSystem'\nimport { sizeSystem } from './sizeSystem'\nimport { propsReadySystem } from './propsReadySystem'\n\nexport const initialItemCountSystem = u.system(\n  ([{ sizes, firstItemIndex, data }, { listState }, { didMount }]) => {\n    const initialItemCount = u.statefulStream(0)\n\n    u.connect(\n      u.pipe(\n        didMount,\n        u.withLatestFrom(initialItemCount),\n        u.filter(([, count]) => count !== 0),\n        u.withLatestFrom(sizes, firstItemIndex, data),\n        u.map(([[, count], sizes, firstItemIndex, data = []]) => {\n          let includedGroupsCount = 0\n          if (sizes.groupIndices.length > 0) {\n            for (const index of sizes.groupIndices) {\n              if (index - includedGroupsCount >= count) {\n                break\n              }\n              includedGroupsCount++\n            }\n          }\n          const adjustedCount = count + includedGroupsCount\n          const items = Array.from({ length: adjustedCount }).map((_, index) => ({ index, size: 0, offset: 0, data: data[index] }))\n          return buildListState(items, [], adjustedCount, sizes, firstItemIndex)\n        })\n      ),\n      listState\n    )\n\n    return { initialItemCount }\n  },\n  u.tup(sizeSystem, listStateSystem, propsReadySystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { ListRange } from './interfaces'\nimport { stateFlagsSystem } from './stateFlagsSystem'\nimport { ScrollSeekConfiguration } from './interfaces'\n\nexport const scrollSeekSystem = u.system(\n  ([{ scrollVelocity }]) => {\n    const isSeeking = u.statefulStream(false)\n    const rangeChanged = u.stream<ListRange>()\n    const scrollSeekConfiguration = u.statefulStream<ScrollSeekConfiguration | undefined | false>(false)\n\n    u.connect(\n      u.pipe(\n        scrollVelocity,\n        u.withLatestFrom(scrollSeekConfiguration, isSeeking, rangeChanged),\n        u.filter(([_, config]) => !!config),\n        u.map(([speed, config, isSeeking, range]) => {\n          const { exit, enter } = config as ScrollSeekConfiguration\n          if (isSeeking) {\n            if (exit(speed, range)) {\n              return false\n            }\n          } else {\n            if (enter(speed, range)) {\n              return true\n            }\n          }\n          return isSeeking\n        }),\n        u.distinctUntilChanged()\n      ),\n      isSeeking\n    )\n\n    u.subscribe(\n      u.pipe(u.combineLatest(isSeeking, scrollVelocity, rangeChanged), u.withLatestFrom(scrollSeekConfiguration)),\n      ([[isSeeking, velocity, range], config]) => isSeeking && config && config.change && config.change(velocity, range)\n    )\n\n    return { isSeeking, scrollSeekConfiguration, scrollVelocity, scrollSeekRangeChanged: rangeChanged }\n  },\n  u.tup(stateFlagsSystem),\n  { singleton: true }\n)\n","import { connect, system, map, pipe, statefulStream, tup, filter } from '@virtuoso.dev/urx'\nimport { listStateSystem } from './listStateSystem'\n\nexport const topItemCountSystem = system(([{ topItemsIndexes }]) => {\n  const topItemCount = statefulStream(0)\n\n  connect(\n    pipe(\n      topItemCount,\n      filter((length) => length > 0),\n      map((length) => Array.from({ length }).map((_, index) => index))\n    ),\n    topItemsIndexes\n  )\n  return { topItemCount }\n}, tup(listStateSystem))\n","import * as u from '@virtuoso.dev/urx'\nimport { listStateSystem } from './listStateSystem'\nimport { domIOSystem } from './domIOSystem'\n\nexport const totalListHeightSystem = u.system(\n  ([{ footerHeight, headerHeight }, { listState }]) => {\n    const totalListHeightChanged = u.stream<number>()\n    const totalListHeight = u.statefulStreamFromEmitter(\n      u.pipe(\n        u.combineLatest(footerHeight, headerHeight, listState),\n        u.map(([footerHeight, headerHeight, listState]) => {\n          return footerHeight + headerHeight + listState.offsetBottom + listState.bottom\n        })\n      ),\n      0\n    )\n\n    u.connect(u.duc(totalListHeight), totalListHeightChanged)\n\n    return { totalListHeight, totalListHeightChanged }\n  },\n  u.tup(domIOSystem, listStateSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\nimport { listStateSystem } from './listStateSystem'\nimport { sizeSystem } from './sizeSystem'\nimport { UP, stateFlagsSystem } from './stateFlagsSystem'\nimport { ListItem } from './interfaces'\nimport { loggerSystem, LogLevel } from './loggerSystem'\n\n/**\n * Fixes upward scrolling by calculating and compensation from changed item heights, using scrollBy.\n */\nexport const upwardScrollFixSystem = u.system(\n  ([\n    { scrollBy, scrollTop, deviation, scrollingInProgress },\n    { isScrolling, isAtBottom, atBottomState, scrollDirection, lastJumpDueToItemResize },\n    { listState },\n    { beforeUnshiftWith, shiftWithOffset, sizes },\n    { log },\n  ]) => {\n    const deviationOffset = u.streamFromEmitter(\n      u.pipe(\n        listState,\n        u.withLatestFrom(lastJumpDueToItemResize),\n        u.scan(\n          ([, prevItems, prevTotalCount], [{ items, totalCount }, lastJumpDueToItemResize]) => {\n            let newDev = 0\n            if (prevTotalCount === totalCount) {\n              if (prevItems.length > 0 && items.length > 0) {\n                const firstItemIndex = items[0].originalIndex\n                const prevFirstItemIndex = prevItems[0].originalIndex\n                const atStart = firstItemIndex === 0 && prevFirstItemIndex === 0\n                const onlyItem = items.length === 1\n\n                if (!atStart) {\n                  for (let index = items.length - 1; index >= 0; index--) {\n                    const item = items[index]\n\n                    const prevItem = prevItems.find((pItem) => pItem.originalIndex === item.originalIndex)\n\n                    if (!prevItem) {\n                      continue\n                    }\n\n                    if (item.offset !== prevItem.offset || onlyItem) {\n                      newDev = item.offset - prevItem.offset + item.size - prevItem.size\n                      break\n                    }\n                  }\n                }\n              }\n\n              if (newDev !== 0) {\n                newDev += lastJumpDueToItemResize\n              }\n            }\n\n            return [newDev, items, totalCount] as [number, ListItem<any>[], number]\n          },\n          [0, [], 0] as [number, ListItem<any>[], number]\n        ),\n        u.filter(([amount]) => amount !== 0),\n        u.withLatestFrom(scrollTop, scrollDirection, scrollingInProgress, log, isAtBottom, atBottomState),\n        u.filter(([, scrollTop, scrollDirection, scrollingInProgress]) => {\n          // console.log({ amount, scrollTop, scrollDirection, scrollingInProgress, isAtBottom, atBottomState })\n          return !scrollingInProgress && scrollTop !== 0 && scrollDirection === UP // && (isAtBottom ? amount > 0 : true)\n        }),\n        u.map(([[amount], , , , log]) => {\n          log('Upward scrolling compensation', { amount }, LogLevel.DEBUG)\n          return amount\n        })\n      )\n    )\n\n    u.connect(\n      u.pipe(\n        deviationOffset,\n        u.withLatestFrom(deviation),\n        u.map(([amount, deviation]) => deviation - amount)\n      ),\n      deviation\n    )\n\n    // when the browser stops scrolling,\n    // restore the position and reset the glitching\n    u.subscribe(\n      u.pipe(\n        u.combineLatest(u.statefulStreamFromEmitter(isScrolling, false), deviation),\n        u.filter(([is, deviation]) => !is && deviation !== 0),\n        u.map(([_, deviation]) => deviation),\n        u.throttleTime(1)\n      ),\n      (offset) => {\n        if (offset > 0) {\n          u.publish(scrollBy, { top: -offset, behavior: 'auto' })\n          u.publish(deviation, 0)\n        } else {\n          u.publish(deviation, 0)\n          u.publish(scrollBy, { top: -offset, behavior: 'auto' })\n        }\n      }\n    )\n\n    u.connect(\n      u.pipe(\n        shiftWithOffset,\n        u.map((offset) => {\n          return { top: -offset }\n        })\n      ),\n      scrollBy\n    )\n\n    u.connect(\n      u.pipe(\n        beforeUnshiftWith,\n        u.withLatestFrom(sizes),\n        u.map(([offset, { lastSize }]) => offset * lastSize)\n      ),\n      deviationOffset\n    )\n\n    return { deviation }\n  },\n  u.tup(domIOSystem, stateFlagsSystem, listStateSystem, sizeSystem, loggerSystem)\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { totalListHeightSystem } from './totalListHeightSystem'\nimport { propsReadySystem } from './propsReadySystem'\nimport { domIOSystem } from './domIOSystem'\n\nexport const initialScrollTopSystem = u.system(\n  ([{ totalListHeight }, { didMount }, { scrollTo }]) => {\n    const initialScrollTop = u.statefulStream(0)\n\n    u.subscribe(\n      u.pipe(\n        didMount,\n        u.withLatestFrom(initialScrollTop),\n        u.filter(([, offset]) => offset !== 0),\n        u.map(([, offset]) => ({ top: offset }))\n      ),\n      (location) => {\n        u.handleNext(\n          u.pipe(\n            totalListHeight,\n            u.filter((val) => val !== 0)\n          ),\n          () => {\n            setTimeout(() => {\n              u.publish(scrollTo, location)\n            })\n          }\n        )\n      }\n    )\n\n    return {\n      initialScrollTop,\n    }\n  },\n  u.tup(totalListHeightSystem, propsReadySystem, domIOSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { totalListHeightSystem } from './totalListHeightSystem'\nimport { domIOSystem } from './domIOSystem'\n\nexport const alignToBottomSystem = u.system(\n  ([{ viewportHeight }, { totalListHeight }]) => {\n    const alignToBottom = u.statefulStream(false)\n\n    const paddingTopAddition = u.statefulStreamFromEmitter(\n      u.pipe(\n        u.combineLatest(alignToBottom, viewportHeight, totalListHeight),\n        u.filter(([enabled]) => enabled),\n        u.map(([, viewportHeight, totalListHeight]) => {\n          return Math.max(0, viewportHeight - totalListHeight)\n        }),\n        u.distinctUntilChanged()\n      ),\n      0\n    )\n\n    return { alignToBottom, paddingTopAddition }\n  },\n  u.tup(domIOSystem, totalListHeightSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\nimport { WindowViewportInfo } from './interfaces'\n\nexport const windowScrollerSystem = u.system(([{ scrollTo, scrollContainerState }]) => {\n  const windowScrollContainerState = u.stream<[number, number]>()\n  const windowViewportRect = u.stream<WindowViewportInfo>()\n  const windowScrollTo = u.stream<ScrollToOptions>()\n  const useWindowScroll = u.statefulStream(false)\n  const customScrollParent = u.statefulStream<HTMLElement | undefined>(undefined)\n\n  u.connect(\n    u.pipe(\n      u.combineLatest(windowScrollContainerState, windowViewportRect),\n      u.map(([[windowScrollTop, scrollHeight], { offsetTop }]) => {\n        return [Math.max(0, windowScrollTop - offsetTop), scrollHeight]\n      })\n    ),\n    scrollContainerState\n  )\n\n  u.connect(\n    u.pipe(\n      scrollTo,\n      u.withLatestFrom(windowViewportRect),\n      u.map(([scrollTo, { offsetTop }]) => {\n        return {\n          ...scrollTo,\n          top: scrollTo.top! + offsetTop,\n        }\n      })\n    ),\n    windowScrollTo\n  )\n\n  return {\n    // config\n    useWindowScroll,\n    customScrollParent,\n\n    // input\n    windowScrollContainerState,\n    windowViewportRect,\n\n    // signals\n    windowScrollTo,\n  }\n}, u.tup(domIOSystem))\n","import * as u from '@virtuoso.dev/urx'\nimport { findMaxKeyValue } from './AATree'\nimport { domIOSystem } from './domIOSystem'\nimport { offsetOf, originalIndexFromItemIndex, sizeSystem } from './sizeSystem'\nimport { loggerSystem } from './loggerSystem'\nimport { scrollToIndexSystem } from './scrollToIndexSystem'\nimport { listStateSystem } from './listStateSystem'\nimport { ScrollIntoViewLocation } from './interfaces'\n\nexport const scrollIntoViewSystem = u.system(\n  ([{ sizes, totalCount }, { scrollTop, viewportHeight, headerHeight, scrollingInProgress }, { scrollToIndex }]) => {\n    const scrollIntoView = u.stream<ScrollIntoViewLocation>()\n\n    u.connect(\n      u.pipe(\n        scrollIntoView,\n        u.withLatestFrom(sizes, viewportHeight, totalCount, headerHeight, scrollTop),\n        u.map(([{ index, behavior = 'auto', done }, sizes, viewportHeight, totalCount, headerHeight, scrollTop]) => {\n          const lastIndex = totalCount - 1\n          let location = null\n          index = originalIndexFromItemIndex(index, sizes)\n          index = Math.max(0, index, Math.min(lastIndex, index))\n\n          const itemTop = offsetOf(index, sizes.offsetTree) + headerHeight\n          if (itemTop < scrollTop) {\n            location = { index, behavior, align: 'start' }\n          } else {\n            const itemBottom = itemTop + findMaxKeyValue(sizes.sizeTree, index)[1]!\n\n            if (itemBottom > scrollTop + viewportHeight) {\n              location = { index, behavior, align: 'end' }\n            }\n          }\n\n          if (location) {\n            done &&\n              u.handleNext(\n                u.pipe(\n                  scrollingInProgress,\n                  u.skip(1),\n                  u.filter((value) => value === false)\n                ),\n                done\n              )\n          } else {\n            done && done()\n          }\n\n          return location\n        }),\n        u.filter((value) => value !== null)\n      ),\n      scrollToIndex\n    )\n\n    return {\n      scrollIntoView,\n    }\n  },\n  u.tup(sizeSystem, domIOSystem, scrollToIndexSystem, listStateSystem, loggerSystem),\n  { singleton: true }\n)\n","import * as u from '@virtuoso.dev/urx'\nimport { domIOSystem } from './domIOSystem'\nimport { followOutputSystem } from './followOutputSystem'\nimport { groupedListSystem } from './groupedListSystem'\nimport { initialItemCountSystem } from './initialItemCountSystem'\nimport { initialTopMostItemIndexSystem } from './initialTopMostItemIndexSystem'\nimport { listStateSystem } from './listStateSystem'\nimport { propsReadySystem } from './propsReadySystem'\nimport { scrollSeekSystem } from './scrollSeekSystem'\nimport { scrollToIndexSystem } from './scrollToIndexSystem'\nimport { sizeRangeSystem } from './sizeRangeSystem'\nimport { sizeSystem } from './sizeSystem'\nimport { topItemCountSystem } from './topItemCountSystem'\nimport { totalListHeightSystem } from './totalListHeightSystem'\nimport { upwardScrollFixSystem } from './upwardScrollFixSystem'\nimport { initialScrollTopSystem } from './initialScrollTopSystem'\nimport { alignToBottomSystem } from './alignToBottomSystem'\nimport { windowScrollerSystem } from './windowScrollerSystem'\nimport { loggerSystem } from './loggerSystem'\nimport { scrollIntoViewSystem } from './scrollIntoViewSystem'\n\n// workaround the growing list of systems below\n// fix this with 4.1 recursive conditional types\nconst featureGroup1System = u.system(\n  ([\n    sizeRange,\n    initialItemCount,\n    propsReady,\n    scrollSeek,\n    totalListHeight,\n    initialScrollTopSystem,\n    alignToBottom,\n    windowScroller,\n    scrollIntoView,\n  ]) => {\n    return {\n      ...sizeRange,\n      ...initialItemCount,\n      ...propsReady,\n      ...scrollSeek,\n      ...totalListHeight,\n      ...initialScrollTopSystem,\n      ...alignToBottom,\n      ...windowScroller,\n      ...scrollIntoView,\n    }\n  },\n  u.tup(\n    sizeRangeSystem,\n    initialItemCountSystem,\n    propsReadySystem,\n    scrollSeekSystem,\n    totalListHeightSystem,\n    initialScrollTopSystem,\n    alignToBottomSystem,\n    windowScrollerSystem,\n    scrollIntoViewSystem\n  )\n)\n\nexport const listSystem = u.system(\n  ([\n    {\n      totalCount,\n      sizeRanges,\n      fixedItemSize,\n      defaultItemSize,\n      trackItemSizes,\n      itemSize,\n      data,\n      firstItemIndex,\n      groupIndices,\n      statefulTotalCount,\n    },\n    { initialTopMostItemIndex, scrolledToInitialItem },\n    domIO,\n    followOutput,\n    { listState, topItemsIndexes, ...flags },\n    { scrollToIndex },\n    _,\n    { topItemCount },\n    { groupCounts },\n    featureGroup1,\n    log,\n  ]) => {\n    u.connect(flags.rangeChanged, featureGroup1.scrollSeekRangeChanged)\n    u.connect(u.pipe(featureGroup1.windowViewportRect, u.map(u.prop('visibleHeight'))), domIO.viewportHeight)\n\n    return {\n      // input\n      totalCount,\n      data,\n      firstItemIndex,\n      sizeRanges,\n      initialTopMostItemIndex,\n      scrolledToInitialItem,\n      topItemsIndexes,\n      topItemCount,\n      groupCounts,\n      fixedItemHeight: fixedItemSize,\n      defaultItemHeight: defaultItemSize,\n      ...followOutput,\n\n      // output\n      statefulTotalCount,\n      listState,\n      scrollToIndex,\n      trackItemSizes,\n      itemSize,\n      groupIndices,\n\n      // exported from stateFlagsSystem\n      ...flags,\n      // the bag of IO from featureGroup1System\n      ...featureGroup1,\n      ...domIO,\n      ...log,\n    }\n  },\n  u.tup(\n    sizeSystem,\n    initialTopMostItemIndexSystem,\n    domIOSystem,\n    followOutputSystem,\n    listStateSystem,\n    scrollToIndexSystem,\n    upwardScrollFixSystem,\n    topItemCountSystem,\n    groupedListSystem,\n    featureGroup1System,\n    loggerSystem\n  )\n)\n","import { simpleMemoize } from './simpleMemoize'\n\nconst WEBKIT_STICKY = '-webkit-sticky'\nconst STICKY = 'sticky'\n\nexport const positionStickyCssValue = simpleMemoize(() => {\n  if (typeof document === 'undefined') {\n    return STICKY\n  }\n  const node = document.createElement('div')\n  node.style.position = WEBKIT_STICKY\n  return node.style.position === WEBKIT_STICKY ? WEBKIT_STICKY : STICKY\n})\n","import { useEffect, useRef, useCallback } from 'react'\nimport { useSizeWithElRef } from './useSize'\nimport { WindowViewportInfo } from '../interfaces'\n\nexport default function useWindowViewportRectRef(callback: (info: WindowViewportInfo) => void, customScrollParent?: HTMLElement) {\n  const viewportInfo = useRef<WindowViewportInfo | null>(null)\n\n  const calculateInfo = useCallback(\n    (element: HTMLElement | null) => {\n      if (element === null) {\n        return\n      }\n      const rect = element.getBoundingClientRect()\n      const visibleWidth = rect.width\n      let visibleHeight: number, offsetTop: number\n\n      if (customScrollParent) {\n        const customScrollParentRect = customScrollParent.getBoundingClientRect()\n        const deltaTop = rect.top - customScrollParentRect.top\n\n        visibleHeight = customScrollParentRect.height - Math.max(0, deltaTop)\n        offsetTop = deltaTop + customScrollParent.scrollTop\n      } else {\n        visibleHeight = window.innerHeight - Math.max(0, rect.top)\n        offsetTop = rect.top + window.pageYOffset\n      }\n\n      viewportInfo.current = {\n        offsetTop,\n        visibleHeight,\n        visibleWidth,\n      }\n\n      callback(viewportInfo.current)\n    },\n    [callback, customScrollParent]\n  )\n\n  const { callbackRef, ref } = useSizeWithElRef(calculateInfo)\n\n  const scrollAndResizeEventHandler = useCallback(() => {\n    calculateInfo(ref.current)\n  }, [calculateInfo, ref])\n\n  useEffect(() => {\n    if (customScrollParent) {\n      customScrollParent.addEventListener('scroll', scrollAndResizeEventHandler)\n      const observer = new ResizeObserver(scrollAndResizeEventHandler)\n      observer.observe(customScrollParent)\n      return () => {\n        customScrollParent.removeEventListener('scroll', scrollAndResizeEventHandler)\n        observer.unobserve(customScrollParent)\n      }\n    } else {\n      window.addEventListener('scroll', scrollAndResizeEventHandler)\n      window.addEventListener('resize', scrollAndResizeEventHandler)\n      return () => {\n        window.removeEventListener('scroll', scrollAndResizeEventHandler)\n        window.removeEventListener('resize', scrollAndResizeEventHandler)\n      }\n    }\n  }, [scrollAndResizeEventHandler, customScrollParent])\n\n  return callbackRef\n}\n","import { RefHandle, systemToComponent } from '@virtuoso.dev/react-urx'\nimport {\n  compose,\n  connect,\n  getValue,\n  map,\n  pipe,\n  publish,\n  statefulStream,\n  stream,\n  Stream,\n  subscribe,\n  system,\n  tup,\n  withLatestFrom,\n  statefulStreamFromEmitter,\n  distinctUntilChanged,\n  noop,\n} from '@virtuoso.dev/urx'\nimport * as React from 'react'\nimport { ComponentType, createElement, CSSProperties, FC } from 'react'\nimport useIsomorphicLayoutEffect from './hooks/useIsomorphicLayoutEffect'\nimport useChangedListContentsSizes from './hooks/useChangedChildSizes'\nimport useScrollTop from './hooks/useScrollTop'\nimport useSize from './hooks/useSize'\nimport { Components, ComputeItemKey, GroupContent, GroupItemContent, ItemContent, ListRootProps } from './interfaces'\nimport { listSystem } from './listSystem'\nimport { positionStickyCssValue } from './utils/positionStickyCssValue'\nimport useWindowViewportRectRef from './hooks/useWindowViewportRect'\nimport { correctItemSize } from './utils/correctItemSize'\nimport { ScrollerProps } from '.'\n\nexport function identity<T>(value: T) {\n  return value\n}\n\nconst listComponentPropsSystem = system(() => {\n  const itemContent = statefulStream<ItemContent<any, any> | GroupItemContent<any, any>>((index: number) => `Item ${index}`)\n  const context = statefulStream<unknown>(null)\n  const groupContent = statefulStream<GroupContent>((index: number) => `Group ${index}`)\n  const components = statefulStream<Components<any>>({})\n  const computeItemKey = statefulStream<ComputeItemKey<any, any>>(identity)\n  const headerFooterTag = statefulStream('div')\n  const scrollerRef = statefulStream<(ref: HTMLElement | Window | null) => void>(noop)\n\n  const distinctProp = <K extends keyof Components<any>>(propName: K, defaultValue: Components<any>[K] | null | 'div' = null) => {\n    return statefulStreamFromEmitter(\n      pipe(\n        components,\n        map((components) => components[propName]),\n        distinctUntilChanged()\n      ),\n      defaultValue\n    )\n  }\n\n  return {\n    context,\n    itemContent,\n    groupContent,\n    components,\n    computeItemKey,\n    headerFooterTag,\n    scrollerRef,\n    FooterComponent: distinctProp('Footer'),\n    HeaderComponent: distinctProp('Header'),\n    TopItemListComponent: distinctProp('TopItemList'),\n    ListComponent: distinctProp('List', 'div'),\n    ItemComponent: distinctProp('Item', 'div'),\n    GroupComponent: distinctProp('Group', 'div'),\n    ScrollerComponent: distinctProp('Scroller', 'div'),\n    EmptyPlaceholder: distinctProp('EmptyPlaceholder'),\n    ScrollSeekPlaceholder: distinctProp('ScrollSeekPlaceholder'),\n  }\n})\n\nexport function addDeprecatedAlias<T>(prop: Stream<T>, message: string) {\n  const alias = stream<T>()\n  subscribe(alias, () =>\n    console.warn(`react-virtuoso: You are using a deprecated property. ${message}`, 'color: red;', 'color: inherit;', 'color: blue;')\n  )\n  connect(alias, prop)\n  return alias\n}\n\nconst combinedSystem = system(([listSystem, propsSystem]) => {\n  const deprecatedProps = {\n    item: addDeprecatedAlias(propsSystem.itemContent, 'Rename the %citem%c prop to %citemContent.'),\n    group: addDeprecatedAlias(propsSystem.groupContent, 'Rename the %cgroup%c prop to %cgroupContent.'),\n    topItems: addDeprecatedAlias(listSystem.topItemCount, 'Rename the %ctopItems%c prop to %ctopItemCount.'),\n    itemHeight: addDeprecatedAlias(listSystem.fixedItemHeight, 'Rename the %citemHeight%c prop to %cfixedItemHeight.'),\n    scrollingStateChange: addDeprecatedAlias(listSystem.isScrolling, 'Rename the %cscrollingStateChange%c prop to %cisScrolling.'),\n    adjustForPrependedItems: stream<any>(),\n    maxHeightCacheSize: stream<any>(),\n    footer: stream<any>(),\n    header: stream<any>(),\n    HeaderContainer: stream<any>(),\n    FooterContainer: stream<any>(),\n    ItemContainer: stream<any>(),\n    ScrollContainer: stream<any>(),\n    GroupContainer: stream<any>(),\n    ListContainer: stream<any>(),\n    emptyComponent: stream<any>(),\n    scrollSeek: stream<any>(),\n  }\n\n  subscribe(deprecatedProps.adjustForPrependedItems, () => {\n    console.warn(\n      `react-virtuoso: adjustForPrependedItems is no longer supported. Use the firstItemIndex property instead - https://virtuoso.dev/prepend-items.`,\n      'color: red;',\n      'color: inherit;',\n      'color: blue;'\n    )\n  })\n\n  subscribe(deprecatedProps.maxHeightCacheSize, () => {\n    console.warn(`react-virtuoso: maxHeightCacheSize is no longer necessary. Setting it has no effect - remove it from your code.`)\n  })\n\n  subscribe(deprecatedProps.HeaderContainer, () => {\n    console.warn(\n      `react-virtuoso: HeaderContainer is deprecated. Use headerFooterTag if you want to change the wrapper of the header component and pass components.Header to change its contents.`\n    )\n  })\n\n  subscribe(deprecatedProps.FooterContainer, () => {\n    console.warn(\n      `react-virtuoso: FooterContainer is deprecated. Use headerFooterTag if you want to change the wrapper of the footer component and pass components.Footer to change its contents.`\n    )\n  })\n\n  function deprecateComponentProp(stream: Stream<any>, componentName: string, propName: string) {\n    connect(\n      pipe(\n        stream,\n        withLatestFrom(propsSystem.components),\n        map(([comp, components]) => {\n          console.warn(`react-virtuoso: ${propName} property is deprecated. Pass components.${componentName} instead.`)\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n          return { ...components, [componentName]: comp }\n        })\n      ),\n      propsSystem.components\n    )\n  }\n\n  subscribe(deprecatedProps.scrollSeek, ({ placeholder, ...config }) => {\n    console.warn(\n      `react-virtuoso: scrollSeek property is deprecated. Pass scrollSeekConfiguration and specify the placeholder in components.ScrollSeekPlaceholder instead.`\n    )\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    publish(propsSystem.components, { ...getValue(propsSystem.components), ScrollSeekPlaceholder: placeholder })\n    publish(listSystem.scrollSeekConfiguration, config)\n  })\n\n  deprecateComponentProp(deprecatedProps.footer, 'Footer', 'footer')\n  deprecateComponentProp(deprecatedProps.header, 'Header', 'header')\n  deprecateComponentProp(deprecatedProps.ItemContainer, 'Item', 'ItemContainer')\n  deprecateComponentProp(deprecatedProps.ListContainer, 'List', 'ListContainer')\n  deprecateComponentProp(deprecatedProps.ScrollContainer, 'Scroller', 'ScrollContainer')\n  deprecateComponentProp(deprecatedProps.emptyComponent, 'EmptyPlaceholder', 'emptyComponent')\n  deprecateComponentProp(deprecatedProps.GroupContainer, 'Group', 'GroupContainer')\n\n  return { ...listSystem, ...propsSystem, ...deprecatedProps }\n}, tup(listSystem, listComponentPropsSystem))\n\nconst DefaultScrollSeekPlaceholder = ({ height }: { height: number }) => <div style={{ height }}></div>\n\nconst GROUP_STYLE = { position: positionStickyCssValue(), zIndex: 1, overflowAnchor: 'none' }\n\nexport const Items = React.memo(function VirtuosoItems({ showTopList = false }: { showTopList?: boolean }) {\n  const listState = useEmitterValue('listState')\n  const deviation = useEmitterValue('deviation')\n  const sizeRanges = usePublisher('sizeRanges')\n  const useWindowScroll = useEmitterValue('useWindowScroll')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const windowScrollContainerStateCallback = usePublisher('windowScrollContainerState')\n  const _scrollContainerStateCallback = usePublisher('scrollContainerState')\n  const scrollContainerStateCallback =\n    customScrollParent || useWindowScroll ? windowScrollContainerStateCallback : _scrollContainerStateCallback\n  const itemContent = useEmitterValue('itemContent')\n  const context = useEmitterValue('context')\n  const groupContent = useEmitterValue('groupContent')\n  const trackItemSizes = useEmitterValue('trackItemSizes')\n  const itemSize = useEmitterValue('itemSize')\n  const log = useEmitterValue('log')\n\n  const ref = useChangedListContentsSizes(\n    sizeRanges,\n    itemSize,\n    trackItemSizes,\n    showTopList ? noop : scrollContainerStateCallback,\n    log,\n    customScrollParent\n  )\n  const EmptyPlaceholder = useEmitterValue('EmptyPlaceholder')\n  const ScrollSeekPlaceholder = useEmitterValue('ScrollSeekPlaceholder') || DefaultScrollSeekPlaceholder\n  const ListComponent = useEmitterValue('ListComponent')!\n  const ItemComponent = useEmitterValue('ItemComponent')!\n  const GroupComponent = useEmitterValue('GroupComponent')!\n  const computeItemKey = useEmitterValue('computeItemKey')\n  const isSeeking = useEmitterValue('isSeeking')\n  const hasGroups = useEmitterValue('groupIndices').length > 0\n  const paddingTopAddition = useEmitterValue('paddingTopAddition')\n  const firstItemIndex = useEmitterValue('firstItemIndex')\n  const statefulTotalCount = useEmitterValue('statefulTotalCount')\n\n  const containerStyle: CSSProperties = showTopList\n    ? {}\n    : {\n        boxSizing: 'border-box',\n        paddingTop: listState.offsetTop + paddingTopAddition,\n        paddingBottom: listState.offsetBottom,\n        marginTop: deviation,\n      }\n\n  if (!showTopList && statefulTotalCount === 0 && EmptyPlaceholder) {\n    return createElement(EmptyPlaceholder, contextPropIfNotDomElement(EmptyPlaceholder, context))\n  }\n\n  return createElement(\n    ListComponent,\n    {\n      ...contextPropIfNotDomElement(ListComponent, context),\n      ref,\n      style: containerStyle,\n      'data-test-id': showTopList ? 'virtuoso-top-item-list' : 'virtuoso-item-list',\n    },\n    (showTopList ? listState.topItems : listState.items).map((item) => {\n      const index = item.originalIndex!\n      const key = computeItemKey(index + firstItemIndex, item.data, context)\n\n      if (isSeeking) {\n        return createElement(ScrollSeekPlaceholder, {\n          ...contextPropIfNotDomElement(ScrollSeekPlaceholder, context),\n          key,\n          index: item.index,\n          height: item.size,\n          type: item.type || 'item',\n          ...(item.type === 'group' ? {} : { groupIndex: item.groupIndex }),\n        })\n      }\n\n      if (item.type === 'group') {\n        return createElement(\n          GroupComponent,\n          {\n            ...contextPropIfNotDomElement(GroupComponent, context),\n            key,\n            'data-index': index,\n            'data-known-size': item.size,\n            'data-item-index': item.index,\n            style: GROUP_STYLE,\n          } as any,\n          groupContent(item.index)\n        )\n      } else {\n        return createElement(\n          ItemComponent,\n          {\n            ...contextPropIfNotDomElement(ItemComponent, context),\n            key,\n            'data-index': index,\n            'data-known-size': item.size,\n            'data-item-index': item.index,\n            'data-item-group-index': item.groupIndex,\n            style: { overflowAnchor: 'none' },\n          } as any,\n          hasGroups\n            ? (itemContent as GroupItemContent<any, any>)(item.index, item.groupIndex!, item.data, context)\n            : (itemContent as ItemContent<any, any>)(item.index, item.data, context)\n        )\n      }\n    })\n  )\n})\n\nexport const scrollerStyle: CSSProperties = {\n  height: '100%',\n  outline: 'none',\n  overflowY: 'auto',\n  position: 'relative',\n  WebkitOverflowScrolling: 'touch',\n}\n\nexport const viewportStyle: CSSProperties = {\n  width: '100%',\n  height: '100%',\n  position: 'absolute',\n  top: 0,\n}\n\nconst topItemListStyle: CSSProperties = {\n  width: '100%',\n  position: positionStickyCssValue(),\n  top: 0,\n}\n\nexport function contextPropIfNotDomElement(element: unknown, context: unknown) {\n  if (typeof element === 'string') {\n    return undefined\n  }\n  return { context }\n}\n\nconst Header: FC = React.memo(function VirtuosoHeader() {\n  const Header = useEmitterValue('HeaderComponent')\n  const headerHeight = usePublisher('headerHeight')\n  const headerFooterTag = useEmitterValue('headerFooterTag')\n  const ref = useSize((el) => headerHeight(correctItemSize(el, 'height')))\n  const context = useEmitterValue('context')\n  return Header ? createElement(headerFooterTag, { ref }, createElement(Header, contextPropIfNotDomElement(Header, context))) : null\n})\n\nconst Footer: FC = React.memo(function VirtuosoFooter() {\n  const Footer = useEmitterValue('FooterComponent')\n  const footerHeight = usePublisher('footerHeight')\n  const headerFooterTag = useEmitterValue('headerFooterTag')\n  const ref = useSize((el) => footerHeight(correctItemSize(el, 'height')))\n  const context = useEmitterValue('context')\n  return Footer ? createElement(headerFooterTag, { ref }, createElement(Footer, contextPropIfNotDomElement(Footer, context))) : null\n})\n\nexport interface Hooks {\n  usePublisher: typeof usePublisher\n  useEmitterValue: typeof useEmitterValue\n  useEmitter: typeof useEmitter\n}\n\nexport function buildScroller({ usePublisher, useEmitter, useEmitterValue }: Hooks) {\n  const Scroller: ComponentType<ScrollerProps> = React.memo(function VirtuosoScroller({ style, children, ...props }) {\n    const scrollContainerStateCallback = usePublisher('scrollContainerState')\n    const ScrollerComponent = useEmitterValue('ScrollerComponent')!\n    const smoothScrollTargetReached = usePublisher('smoothScrollTargetReached')\n    const scrollerRefCallback = useEmitterValue('scrollerRef')\n    const context = useEmitterValue('context')\n\n    const { scrollerRef, scrollByCallback, scrollToCallback } = useScrollTop(\n      scrollContainerStateCallback,\n      smoothScrollTargetReached,\n      ScrollerComponent,\n      scrollerRefCallback\n    )\n\n    useEmitter('scrollTo', scrollToCallback)\n    useEmitter('scrollBy', scrollByCallback)\n    return createElement(\n      ScrollerComponent,\n      {\n        ref: scrollerRef as React.MutableRefObject<HTMLDivElement | null>,\n        style: { ...scrollerStyle, ...style },\n        'data-test-id': 'virtuoso-scroller',\n        'data-virtuoso-scroller': true,\n        tabIndex: 0,\n        ...props,\n        ...contextPropIfNotDomElement(ScrollerComponent, context),\n      },\n      children\n    )\n  })\n  return Scroller\n}\n\nexport function buildWindowScroller({ usePublisher, useEmitter, useEmitterValue }: Hooks) {\n  const Scroller: Components['Scroller'] = React.memo(function VirtuosoWindowScroller({ style, children, ...props }) {\n    const scrollContainerStateCallback = usePublisher('windowScrollContainerState')\n    const ScrollerComponent = useEmitterValue('ScrollerComponent')!\n    const smoothScrollTargetReached = usePublisher('smoothScrollTargetReached')\n    const totalListHeight = useEmitterValue('totalListHeight')\n    const deviation = useEmitterValue('deviation')\n    const customScrollParent = useEmitterValue('customScrollParent')\n    const context = useEmitterValue('context')\n    const { scrollerRef, scrollByCallback, scrollToCallback } = useScrollTop(\n      scrollContainerStateCallback,\n      smoothScrollTargetReached,\n      ScrollerComponent,\n      noop,\n      customScrollParent\n    )\n\n    useIsomorphicLayoutEffect(() => {\n      scrollerRef.current = customScrollParent ? customScrollParent : window\n      return () => {\n        scrollerRef.current = null\n      }\n    }, [scrollerRef, customScrollParent])\n\n    useEmitter('windowScrollTo', scrollToCallback)\n    useEmitter('scrollBy', scrollByCallback)\n    return createElement(\n      ScrollerComponent,\n      {\n        style: { position: 'relative', ...style, ...(totalListHeight !== 0 ? { height: totalListHeight + deviation } : {}) },\n        'data-virtuoso-scroller': true,\n        ...props,\n        ...contextPropIfNotDomElement(ScrollerComponent, context),\n      },\n      children\n    )\n  })\n  return Scroller\n}\n\nconst Viewport: FC = ({ children }) => {\n  const viewportHeight = usePublisher('viewportHeight')\n  const viewportRef = useSize(compose(viewportHeight, (el) => correctItemSize(el, 'height')))\n\n  return (\n    <div style={viewportStyle} ref={viewportRef} data-viewport-type=\"element\">\n      {children}\n    </div>\n  )\n}\n\nconst WindowViewport: FC = ({ children }) => {\n  const windowViewportRect = usePublisher('windowViewportRect')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const viewportRef = useWindowViewportRectRef(windowViewportRect, customScrollParent)\n\n  return (\n    <div ref={viewportRef} style={viewportStyle} data-viewport-type=\"window\">\n      {children}\n    </div>\n  )\n}\n\nconst TopItemListContainer: FC = ({ children }) => {\n  const TopItemList = useEmitterValue('TopItemListComponent')\n  const headerHeight = useEmitterValue('headerHeight')\n  const style = { ...topItemListStyle, marginTop: `${headerHeight}px` }\n  const context = useEmitterValue('context')\n  return createElement(TopItemList || 'div', { style, context }, children)\n}\n\nconst ListRoot: FC<ListRootProps> = React.memo(function VirtuosoRoot(props) {\n  const useWindowScroll = useEmitterValue('useWindowScroll')\n  const showTopList = useEmitterValue('topItemsIndexes').length > 0\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const TheScroller = customScrollParent || useWindowScroll ? WindowScroller : Scroller\n  const TheViewport = customScrollParent || useWindowScroll ? WindowViewport : Viewport\n  return (\n    <TheScroller {...props}>\n      <TheViewport>\n        <Header />\n        <Items />\n        <Footer />\n      </TheViewport>\n      {showTopList && (\n        <TopItemListContainer>\n          <Items showTopList={true} />\n        </TopItemListContainer>\n      )}\n    </TheScroller>\n  )\n})\n\nexport type ListHandle = RefHandle<typeof List>\n\nexport const {\n  Component: List,\n  usePublisher,\n  useEmitterValue,\n  useEmitter,\n} = systemToComponent(\n  combinedSystem,\n  {\n    required: {},\n    optional: {\n      context: 'context',\n      followOutput: 'followOutput',\n      firstItemIndex: 'firstItemIndex',\n      itemContent: 'itemContent',\n      groupContent: 'groupContent',\n      overscan: 'overscan',\n      increaseViewportBy: 'increaseViewportBy',\n      totalCount: 'totalCount',\n      topItemCount: 'topItemCount',\n      initialTopMostItemIndex: 'initialTopMostItemIndex',\n      components: 'components',\n      groupCounts: 'groupCounts',\n      atBottomThreshold: 'atBottomThreshold',\n      computeItemKey: 'computeItemKey',\n      defaultItemHeight: 'defaultItemHeight',\n      fixedItemHeight: 'fixedItemHeight',\n      itemSize: 'itemSize',\n      scrollSeekConfiguration: 'scrollSeekConfiguration',\n      headerFooterTag: 'headerFooterTag',\n      data: 'data',\n      initialItemCount: 'initialItemCount',\n      initialScrollTop: 'initialScrollTop',\n      alignToBottom: 'alignToBottom',\n      useWindowScroll: 'useWindowScroll',\n      customScrollParent: 'customScrollParent',\n      scrollerRef: 'scrollerRef',\n      logLevel: 'logLevel',\n\n      // deprecated\n      item: 'item',\n      group: 'group',\n      topItems: 'topItems',\n      itemHeight: 'itemHeight',\n      scrollingStateChange: 'scrollingStateChange',\n      maxHeightCacheSize: 'maxHeightCacheSize',\n      footer: 'footer',\n      header: 'header',\n      ItemContainer: 'ItemContainer',\n      ScrollContainer: 'ScrollContainer',\n      ListContainer: 'ListContainer',\n      GroupContainer: 'GroupContainer',\n      emptyComponent: 'emptyComponent',\n      HeaderContainer: 'HeaderContainer',\n      FooterContainer: 'FooterContainer',\n      scrollSeek: 'scrollSeek',\n    },\n    methods: {\n      scrollToIndex: 'scrollToIndex',\n      scrollIntoView: 'scrollIntoView',\n      scrollTo: 'scrollTo',\n      scrollBy: 'scrollBy',\n      adjustForPrependedItems: 'adjustForPrependedItems',\n    },\n    events: {\n      isScrolling: 'isScrolling',\n      endReached: 'endReached',\n      startReached: 'startReached',\n      rangeChanged: 'rangeChanged',\n      atBottomStateChange: 'atBottomStateChange',\n      atTopStateChange: 'atTopStateChange',\n      totalListHeightChanged: 'totalListHeightChanged',\n      itemsRendered: 'itemsRendered',\n      groupIndices: 'groupIndices',\n    },\n  },\n  ListRoot\n)\n\nconst Scroller = buildScroller({ usePublisher, useEmitterValue, useEmitter })\nconst WindowScroller = buildWindowScroller({ usePublisher, useEmitterValue, useEmitter })\n","import * as u from '@virtuoso.dev/urx'\nimport { rangeComparator, tupleComparator } from './comparators'\nimport { domIOSystem } from './domIOSystem'\nimport { propsReadySystem } from './propsReadySystem'\nimport { scrollSeekSystem } from './scrollSeekSystem'\nimport { IndexLocation, normalizeIndexLocation } from './scrollToIndexSystem'\nimport { sizeRangeSystem } from './sizeRangeSystem'\nimport { stateFlagsSystem } from './stateFlagsSystem'\nimport { windowScrollerSystem } from './windowScrollerSystem'\n\nexport interface ElementDimensions {\n  width: number\n  height: number\n}\n\nexport interface GridItem {\n  index: number\n}\n\nexport interface GridLayout {\n  top: number\n  bottom: number\n}\n\nexport interface GridState extends GridLayout {\n  items: GridItem[]\n  offsetTop: number\n  offsetBottom: number\n  itemHeight: number\n  itemWidth: number\n}\n\nconst INITIAL_GRID_STATE: GridState = {\n  items: [],\n  offsetBottom: 0,\n  offsetTop: 0,\n  top: 0,\n  bottom: 0,\n  itemHeight: 0,\n  itemWidth: 0,\n}\n\nconst PROBE_GRID_STATE: GridState = {\n  items: [{ index: 0 }],\n  offsetBottom: 0,\n  offsetTop: 0,\n  top: 0,\n  bottom: 0,\n  itemHeight: 0,\n  itemWidth: 0,\n}\n\nconst { round, ceil, floor, min, max } = Math\n\nfunction buildItems(startIndex: number, endIndex: number) {\n  return Array.from({ length: endIndex - startIndex + 1 }).map((_, i) => ({ index: i + startIndex } as GridItem))\n}\nexport const gridSystem = u.system(\n  ([\n    { overscan, visibleRange, listBoundary },\n    { scrollTop, viewportHeight, scrollBy, scrollTo, smoothScrollTargetReached, scrollContainerState },\n    stateFlags,\n    scrollSeek,\n    { propsReady, didMount },\n    { windowViewportRect, windowScrollTo, useWindowScroll, customScrollParent, windowScrollContainerState },\n  ]) => {\n    const totalCount = u.statefulStream(0)\n    const initialItemCount = u.statefulStream(0)\n    const gridState = u.statefulStream(INITIAL_GRID_STATE)\n    const viewportDimensions = u.statefulStream<ElementDimensions>({ height: 0, width: 0 })\n    const itemDimensions = u.statefulStream<ElementDimensions>({ height: 0, width: 0 })\n    const scrollToIndex = u.stream<IndexLocation>()\n    const scrollHeight = u.stream<number>()\n    const deviation = u.statefulStream(0)\n\n    u.connect(\n      u.pipe(\n        didMount,\n        u.withLatestFrom(initialItemCount),\n        u.filter(([, count]) => count !== 0),\n        u.map(([, count]) => {\n          return {\n            items: buildItems(0, count - 1),\n            top: 0,\n            bottom: 0,\n            offsetBottom: 0,\n            offsetTop: 0,\n            itemHeight: 0,\n            itemWidth: 0,\n          }\n        })\n      ),\n      gridState\n    )\n\n    u.connect(\n      u.pipe(\n        u.combineLatest(\n          u.duc(totalCount),\n          visibleRange,\n          u.duc(itemDimensions, (prev, next) => prev && prev.width === next.width && prev.height === next.height)\n        ),\n        u.withLatestFrom(viewportDimensions),\n        u.map(([[totalCount, [startOffset, endOffset], item], viewport]) => {\n          const { height: itemHeight, width: itemWidth } = item\n          const { width: viewportWidth } = viewport\n\n          if (totalCount === 0 || viewportWidth === 0) {\n            return INITIAL_GRID_STATE\n          }\n\n          if (itemWidth === 0) {\n            return PROBE_GRID_STATE\n          }\n\n          const perRow = itemsPerRow(viewportWidth, itemWidth)\n\n          let startIndex = perRow * floor(startOffset / itemHeight)\n          let endIndex = perRow * ceil(endOffset / itemHeight) - 1\n          endIndex = min(totalCount - 1, endIndex)\n          startIndex = min(endIndex, max(0, startIndex))\n\n          const items = buildItems(startIndex, endIndex)\n          const { top, bottom } = gridLayout(viewport, item, items)\n          const totalHeight = ceil(totalCount / perRow) * itemHeight\n          const offsetBottom = totalHeight - bottom\n\n          return { items, offsetTop: top, offsetBottom, top, bottom, itemHeight, itemWidth } as GridState\n        })\n      ),\n      gridState\n    )\n\n    u.connect(\n      u.pipe(\n        viewportDimensions,\n        u.map(({ height }) => height)\n      ),\n      viewportHeight\n    )\n\n    u.connect(\n      u.pipe(\n        u.combineLatest(viewportDimensions, itemDimensions, gridState),\n        u.map(([viewportDimensions, item, { items }]) => {\n          const { top, bottom } = gridLayout(viewportDimensions, item, items)\n\n          return [top, bottom] as [number, number]\n        }),\n        u.distinctUntilChanged(tupleComparator)\n      ),\n      listBoundary\n    )\n\n    const endReached = u.streamFromEmitter(\n      u.pipe(\n        u.duc(gridState),\n        u.filter(({ items }) => items.length > 0),\n        u.withLatestFrom(totalCount),\n        u.filter(([{ items }, totalCount]) => items[items.length - 1].index === totalCount - 1),\n        u.map(([, totalCount]) => totalCount - 1),\n        u.distinctUntilChanged()\n      )\n    )\n\n    const startReached = u.streamFromEmitter(\n      u.pipe(\n        u.duc(gridState),\n        u.filter(({ items }) => {\n          return items.length > 0 && items[0].index === 0\n        }),\n        u.mapTo(0),\n        u.distinctUntilChanged()\n      )\n    )\n\n    const rangeChanged = u.streamFromEmitter(\n      u.pipe(\n        u.duc(gridState),\n        u.filter(({ items }) => items.length > 0),\n        u.map(({ items }) => {\n          return {\n            startIndex: items[0].index,\n            endIndex: items[items.length - 1].index,\n          }\n        }),\n        u.distinctUntilChanged(rangeComparator)\n      )\n    )\n\n    u.connect(rangeChanged, scrollSeek.scrollSeekRangeChanged)\n\n    u.connect(\n      u.pipe(\n        scrollToIndex,\n        u.withLatestFrom(viewportDimensions, itemDimensions, totalCount),\n        u.map(([location, viewport, item, totalCount]) => {\n          const normalLocation = normalizeIndexLocation(location)\n          const { align, behavior, offset } = normalLocation\n          let index = normalLocation.index\n          if (index === 'LAST') {\n            index = totalCount - 1\n          }\n\n          index = max(0, index, min(totalCount - 1, index))\n\n          let top = itemTop(viewport, item, index)\n\n          if (align === 'end') {\n            top = round(top - viewport.height + item.height)\n          } else if (align === 'center') {\n            top = round(top - viewport.height / 2 + item.height / 2)\n          }\n\n          if (offset) {\n            top += offset\n          }\n\n          return { top, behavior }\n        })\n      ),\n      scrollTo\n    )\n\n    const totalListHeight = u.statefulStreamFromEmitter(\n      u.pipe(\n        gridState,\n        u.map((gridState) => {\n          return gridState.offsetBottom + gridState.bottom\n        })\n      ),\n      0\n    )\n\n    u.connect(\n      u.pipe(\n        windowViewportRect,\n        u.map((viewportInfo) => ({ width: viewportInfo.visibleWidth, height: viewportInfo.visibleHeight }))\n      ),\n      viewportDimensions\n    )\n\n    return {\n      // input\n      totalCount,\n      viewportDimensions,\n      itemDimensions,\n      scrollTop,\n      scrollHeight,\n      overscan,\n      scrollBy,\n      scrollTo,\n      scrollToIndex,\n      smoothScrollTargetReached,\n      windowViewportRect,\n      windowScrollTo,\n      useWindowScroll,\n      customScrollParent,\n      windowScrollContainerState,\n      deviation,\n      scrollContainerState,\n      initialItemCount,\n      ...scrollSeek,\n\n      // output\n      gridState,\n      totalListHeight,\n      ...stateFlags,\n      startReached,\n      endReached,\n      rangeChanged,\n      propsReady,\n    }\n  },\n  u.tup(sizeRangeSystem, domIOSystem, stateFlagsSystem, scrollSeekSystem, propsReadySystem, windowScrollerSystem)\n)\n\nfunction gridLayout(viewport: ElementDimensions, item: ElementDimensions, items: GridItem[]): GridLayout {\n  const { height: itemHeight } = item\n  if (itemHeight === undefined || items.length === 0) {\n    return { top: 0, bottom: 0 }\n  }\n\n  const top = itemTop(viewport, item, items[0].index)\n  const bottom = itemTop(viewport, item, items[items.length - 1].index) + itemHeight\n  return { top, bottom }\n}\n\nfunction itemTop(viewport: ElementDimensions, item: ElementDimensions, index: number) {\n  const perRow = itemsPerRow(viewport.width, item.width)\n  return floor(index / perRow) * item.height\n}\n\nfunction itemsPerRow(viewportWidth: number, itemWidth: number) {\n  return max(1, floor(viewportWidth / itemWidth))\n}\n","import { RefHandle, systemToComponent } from '@virtuoso.dev/react-urx'\n\nimport * as u from '@virtuoso.dev/urx'\nimport * as React from 'react'\nimport { createElement, FC } from 'react'\nimport { gridSystem } from './gridSystem'\nimport useSize from './hooks/useSize'\nimport useWindowViewportRectRef from './hooks/useWindowViewportRect'\nimport { GridComponents, GridComputeItemKey, GridItemContent, GridRootProps } from './interfaces'\nimport { addDeprecatedAlias, buildScroller, buildWindowScroller, contextPropIfNotDomElement, identity, viewportStyle } from './List'\n\nconst gridComponentPropsSystem = u.system(() => {\n  const itemContent = u.statefulStream<GridItemContent<any>>((index) => `Item ${index}`)\n  const components = u.statefulStream<GridComponents>({})\n  const context = u.statefulStream<unknown>(null)\n  const itemClassName = u.statefulStream('virtuoso-grid-item')\n  const listClassName = u.statefulStream('virtuoso-grid-list')\n  const computeItemKey = u.statefulStream<GridComputeItemKey>(identity)\n  const scrollerRef = u.statefulStream<(ref: HTMLElement | null) => void>(u.noop)\n\n  const distinctProp = <K extends keyof GridComponents>(propName: K, defaultValue: GridComponents[K] | null | 'div' = null) => {\n    return u.statefulStreamFromEmitter(\n      u.pipe(\n        components,\n        u.map((components) => components[propName]),\n        u.distinctUntilChanged()\n      ),\n      defaultValue\n    )\n  }\n\n  return {\n    context,\n    itemContent,\n    components,\n    computeItemKey,\n    itemClassName,\n    listClassName,\n    scrollerRef,\n    ListComponent: distinctProp('List', 'div'),\n    ItemComponent: distinctProp('Item', 'div'),\n    ScrollerComponent: distinctProp('Scroller', 'div'),\n    ScrollSeekPlaceholder: distinctProp('ScrollSeekPlaceholder', 'div'),\n  }\n})\n\nconst combinedSystem = u.system(([gridSystem, gridComponentPropsSystem]) => {\n  const deprecatedProps = {\n    item: addDeprecatedAlias(gridComponentPropsSystem.itemContent, 'Rename the %citem%c prop to %citemContent.'),\n    ItemContainer: u.stream<any>(),\n    ScrollContainer: u.stream<any>(),\n    ListContainer: u.stream<any>(),\n    emptyComponent: u.stream<any>(),\n    scrollSeek: u.stream<any>(),\n  }\n\n  function deprecateComponentProp(stream: u.Stream<any>, componentName: string, propName: string) {\n    u.connect(\n      u.pipe(\n        stream,\n        u.withLatestFrom(gridComponentPropsSystem.components),\n        u.map(([comp, components]) => {\n          console.warn(`react-virtuoso: ${propName} property is deprecated. Pass components.${componentName} instead.`)\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n          return { ...components, [componentName]: comp }\n        })\n      ),\n      gridComponentPropsSystem.components\n    )\n  }\n\n  u.subscribe(deprecatedProps.scrollSeek, ({ placeholder, ...config }) => {\n    console.warn(\n      `react-virtuoso: scrollSeek property is deprecated. Pass scrollSeekConfiguration and specify the placeholder in components.ScrollSeekPlaceholder instead.`\n    )\n    u.publish(gridComponentPropsSystem.components, {\n      ...u.getValue(gridComponentPropsSystem.components),\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      ScrollSeekPlaceholder: placeholder,\n    })\n    u.publish(gridSystem.scrollSeekConfiguration, config)\n  })\n\n  deprecateComponentProp(deprecatedProps.ItemContainer, 'Item', 'ItemContainer')\n  deprecateComponentProp(deprecatedProps.ListContainer, 'List', 'ListContainer')\n  deprecateComponentProp(deprecatedProps.ScrollContainer, 'Scroller', 'ScrollContainer')\n\n  return { ...gridSystem, ...gridComponentPropsSystem, ...deprecatedProps }\n}, u.tup(gridSystem, gridComponentPropsSystem))\n\nconst GridItems: FC = React.memo(function GridItems() {\n  const gridState = useEmitterValue('gridState')\n  const listClassName = useEmitterValue('listClassName')\n  const itemClassName = useEmitterValue('itemClassName')\n  const itemContent = useEmitterValue('itemContent')\n  const computeItemKey = useEmitterValue('computeItemKey')\n  const isSeeking = useEmitterValue('isSeeking')\n  const scrollHeightCallback = usePublisher('scrollHeight')\n  const ItemComponent = useEmitterValue('ItemComponent')!\n  const ListComponent = useEmitterValue('ListComponent')!\n  const ScrollSeekPlaceholder = useEmitterValue('ScrollSeekPlaceholder')!\n  const context = useEmitterValue('context')\n  const itemDimensions = usePublisher('itemDimensions')\n\n  const listRef = useSize((el) => {\n    const scrollHeight = el.parentElement!.parentElement!.scrollHeight\n    scrollHeightCallback(scrollHeight)\n    const firstItem = el.firstChild as HTMLElement\n    if (firstItem) {\n      itemDimensions(firstItem.getBoundingClientRect())\n    }\n  })\n\n  return createElement(\n    ListComponent,\n    {\n      ref: listRef,\n      className: listClassName,\n      ...contextPropIfNotDomElement(ListComponent, context),\n      style: { paddingTop: gridState.offsetTop, paddingBottom: gridState.offsetBottom },\n    },\n    gridState.items.map((item) => {\n      const key = computeItemKey(item.index)\n      return isSeeking\n        ? createElement(ScrollSeekPlaceholder, {\n            key,\n            ...contextPropIfNotDomElement(ScrollSeekPlaceholder, context),\n            index: item.index,\n            height: gridState.itemHeight,\n            width: gridState.itemWidth,\n          })\n        : createElement(\n            ItemComponent,\n            { ...contextPropIfNotDomElement(ItemComponent, context), className: itemClassName, 'data-index': item.index, key },\n            itemContent(item.index, context)\n          )\n    })\n  )\n})\n\nconst Viewport: FC = ({ children }) => {\n  const viewportDimensions = usePublisher('viewportDimensions')\n\n  const viewportRef = useSize((el) => {\n    viewportDimensions(el.getBoundingClientRect())\n  })\n\n  return (\n    <div style={viewportStyle} ref={viewportRef}>\n      {children}\n    </div>\n  )\n}\n\nconst WindowViewport: FC = ({ children }) => {\n  const windowViewportRect = usePublisher('windowViewportRect')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const viewportRef = useWindowViewportRectRef(windowViewportRect, customScrollParent)\n\n  return (\n    <div ref={viewportRef} style={viewportStyle}>\n      {children}\n    </div>\n  )\n}\n\nconst GridRoot: FC<GridRootProps> = React.memo(function GridRoot({ ...props }) {\n  const useWindowScroll = useEmitterValue('useWindowScroll')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const TheScroller = customScrollParent || useWindowScroll ? WindowScroller : Scroller\n  const TheViewport = customScrollParent || useWindowScroll ? WindowViewport : Viewport\n\n  return (\n    <TheScroller {...props}>\n      <TheViewport>\n        <GridItems />\n      </TheViewport>\n    </TheScroller>\n  )\n})\n\nconst {\n  Component: Grid,\n  usePublisher,\n  useEmitterValue,\n  useEmitter,\n} = systemToComponent(\n  combinedSystem,\n  {\n    optional: {\n      totalCount: 'totalCount',\n      overscan: 'overscan',\n      itemContent: 'itemContent',\n      components: 'components',\n      computeItemKey: 'computeItemKey',\n      initialItemCount: 'initialItemCount',\n      scrollSeekConfiguration: 'scrollSeekConfiguration',\n      listClassName: 'listClassName',\n      itemClassName: 'itemClassName',\n      useWindowScroll: 'useWindowScroll',\n      customScrollParent: 'customScrollParent',\n      scrollerRef: 'scrollerRef',\n\n      // deprecated\n      item: 'item',\n      ItemContainer: 'ItemContainer',\n      ScrollContainer: 'ScrollContainer',\n      ListContainer: 'ListContainer',\n      scrollSeek: 'scrollSeek',\n    },\n    methods: {\n      scrollTo: 'scrollTo',\n      scrollBy: 'scrollBy',\n      scrollToIndex: 'scrollToIndex',\n    },\n    events: {\n      isScrolling: 'isScrolling',\n      endReached: 'endReached',\n      startReached: 'startReached',\n      rangeChanged: 'rangeChanged',\n      atBottomStateChange: 'atBottomStateChange',\n      atTopStateChange: 'atTopStateChange',\n    },\n  },\n  GridRoot\n)\n\nexport type foo<T> = T extends React.ForwardRefExoticComponent<React.RefAttributes<infer Handle>> ? Handle : never\n\nexport type GridHandle = RefHandle<typeof Grid>\nexport { Grid }\n\nconst Scroller = buildScroller({ usePublisher, useEmitterValue, useEmitter })\nconst WindowScroller = buildWindowScroller({ usePublisher, useEmitterValue, useEmitter })\n","import { systemToComponent } from '@virtuoso.dev/react-urx'\nimport { map, pipe, statefulStream, system, tup, statefulStreamFromEmitter, distinctUntilChanged, noop, compose } from '@virtuoso.dev/urx'\nimport * as React from 'react'\nimport { createElement, FC } from 'react'\nimport useChangedListContentsSizes from './hooks/useChangedChildSizes'\nimport { ComputeItemKey, ItemContent, FixedHeaderContent, TableComponents, TableRootProps } from './interfaces'\nimport { listSystem } from './listSystem'\nimport { identity, buildScroller, buildWindowScroller, viewportStyle, contextPropIfNotDomElement } from './List'\nimport useSize from './hooks/useSize'\nimport { correctItemSize } from './utils/correctItemSize'\nimport useWindowViewportRectRef from './hooks/useWindowViewportRect'\n\nconst tableComponentPropsSystem = system(() => {\n  const itemContent = statefulStream<ItemContent<any, unknown>>((index: number) => <td>Item ${index}</td>)\n  const context = statefulStream<unknown>(null)\n  const fixedHeaderContent = statefulStream<FixedHeaderContent>(null)\n  const components = statefulStream<TableComponents>({})\n  const computeItemKey = statefulStream<ComputeItemKey<any, unknown>>(identity)\n  const scrollerRef = statefulStream<(ref: HTMLElement | Window | null) => void>(noop)\n\n  const distinctProp = <K extends keyof TableComponents>(\n    propName: K,\n    defaultValue: TableComponents[K] | null | 'thead' | 'table' | 'tbody' | 'tr' | 'div' = null\n  ) => {\n    return statefulStreamFromEmitter(\n      pipe(\n        components,\n        map((components) => components[propName]),\n        distinctUntilChanged()\n      ),\n      defaultValue\n    )\n  }\n\n  return {\n    context,\n    itemContent,\n    fixedHeaderContent,\n    components,\n    computeItemKey,\n    scrollerRef,\n    TableComponent: distinctProp('Table', 'table'),\n    TableHeadComponent: distinctProp('TableHead', 'thead'),\n    TableBodyComponent: distinctProp('TableBody', 'tbody'),\n    TableRowComponent: distinctProp('TableRow', 'tr'),\n    ScrollerComponent: distinctProp('Scroller', 'div'),\n    EmptyPlaceholder: distinctProp('EmptyPlaceholder'),\n    ScrollSeekPlaceholder: distinctProp('ScrollSeekPlaceholder'),\n  }\n})\n\nconst combinedSystem = system(([listSystem, propsSystem]) => {\n  return { ...listSystem, ...propsSystem }\n}, tup(listSystem, tableComponentPropsSystem))\n\nconst DefaultScrollSeekPlaceholder = ({ height }: { height: number }) => (\n  <tr>\n    <td style={{ height }}></td>\n  </tr>\n)\n\nconst FillerRow = ({ height }: { height: number }) => (\n  <tr>\n    <td style={{ height: height, padding: 0, border: 0 }}></td>\n  </tr>\n)\n\nexport const Items = React.memo(function VirtuosoItems() {\n  const listState = useEmitterValue('listState')\n  const deviation = useEmitterValue('deviation')\n  const sizeRanges = usePublisher('sizeRanges')\n  const useWindowScroll = useEmitterValue('useWindowScroll')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const windowScrollContainerStateCallback = usePublisher('windowScrollContainerState')\n  const _scrollContainerStateCallback = usePublisher('scrollContainerState')\n  const scrollContainerStateCallback =\n    customScrollParent || useWindowScroll ? windowScrollContainerStateCallback : _scrollContainerStateCallback\n  const itemContent = useEmitterValue('itemContent')\n  const trackItemSizes = useEmitterValue('trackItemSizes')\n  const itemSize = useEmitterValue('itemSize')\n  const log = useEmitterValue('log')\n\n  const ref = useChangedListContentsSizes(sizeRanges, itemSize, trackItemSizes, scrollContainerStateCallback, log, customScrollParent)\n  const EmptyPlaceholder = useEmitterValue('EmptyPlaceholder')\n  const ScrollSeekPlaceholder = useEmitterValue('ScrollSeekPlaceholder') || DefaultScrollSeekPlaceholder\n  const TableBodyComponent = useEmitterValue('TableBodyComponent')!\n  const TableRowComponent = useEmitterValue('TableRowComponent')!\n  const computeItemKey = useEmitterValue('computeItemKey')\n  const isSeeking = useEmitterValue('isSeeking')\n  const paddingTopAddition = useEmitterValue('paddingTopAddition')\n  const firstItemIndex = useEmitterValue('firstItemIndex')\n  const statefulTotalCount = useEmitterValue('statefulTotalCount')\n  const context = useEmitterValue('context')\n\n  if (statefulTotalCount === 0 && EmptyPlaceholder) {\n    return createElement(EmptyPlaceholder, contextPropIfNotDomElement(EmptyPlaceholder, context))\n  }\n\n  const paddingTop = listState.offsetTop + paddingTopAddition + deviation\n  const paddingBottom = listState.offsetBottom\n\n  const paddingTopEl = paddingTop > 0 ? <FillerRow height={paddingTop} key=\"padding-top\" /> : null\n\n  const paddingBottomEl = paddingBottom > 0 ? <FillerRow height={paddingBottom} key=\"padding-bottom\" /> : null\n\n  const items = listState.items.map((item) => {\n    const index = item.originalIndex!\n    const key = computeItemKey(index + firstItemIndex, item.data, context)\n\n    if (isSeeking) {\n      return createElement(ScrollSeekPlaceholder, {\n        ...contextPropIfNotDomElement(ScrollSeekPlaceholder, context),\n        key,\n        index: item.index,\n        height: item.size,\n        type: item.type || 'item',\n      })\n    }\n    return createElement(\n      TableRowComponent,\n      {\n        ...contextPropIfNotDomElement(TableRowComponent, context),\n        key,\n        'data-index': index,\n        'data-known-size': item.size,\n        'data-item-index': item.index,\n        style: { overflowAnchor: 'none' },\n      } as any,\n      itemContent(item.index, item.data, context)\n    )\n  })\n\n  return createElement(\n    TableBodyComponent,\n    { ref, 'data-test-id': 'virtuoso-item-list', ...contextPropIfNotDomElement(TableBodyComponent, context) },\n    [paddingTopEl, ...items, paddingBottomEl]\n  )\n})\n\nexport interface Hooks {\n  usePublisher: typeof usePublisher\n  useEmitterValue: typeof useEmitterValue\n  useEmitter: typeof useEmitter\n}\n\nconst Viewport: FC = ({ children }) => {\n  const viewportHeight = usePublisher('viewportHeight')\n  const viewportRef = useSize(compose(viewportHeight, (el) => correctItemSize(el, 'height')))\n\n  return (\n    <div style={viewportStyle} ref={viewportRef} data-viewport-type=\"element\">\n      {children}\n    </div>\n  )\n}\n\nconst WindowViewport: FC = ({ children }) => {\n  const windowViewportRect = usePublisher('windowViewportRect')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const viewportRef = useWindowViewportRectRef(windowViewportRect, customScrollParent)\n\n  return (\n    <div ref={viewportRef} style={viewportStyle} data-viewport-type=\"window\">\n      {children}\n    </div>\n  )\n}\n\nconst TableRoot: FC<TableRootProps> = React.memo(function TableVirtuosoRoot(props) {\n  const useWindowScroll = useEmitterValue('useWindowScroll')\n  const customScrollParent = useEmitterValue('customScrollParent')\n  const fixedHeaderHeight = usePublisher('fixedHeaderHeight')\n  const fixedHeaderContent = useEmitterValue('fixedHeaderContent')\n  const context = useEmitterValue('context')\n  const theadRef = useSize(compose(fixedHeaderHeight, (el) => correctItemSize(el, 'height')))\n  const TheScroller = customScrollParent || useWindowScroll ? WindowScroller : Scroller\n  const TheViewport = customScrollParent || useWindowScroll ? WindowViewport : Viewport\n  const TheTable = useEmitterValue('TableComponent')\n  const TheTHead = useEmitterValue('TableHeadComponent')\n\n  const theHead = fixedHeaderContent\n    ? React.createElement(\n        TheTHead!,\n        {\n          key: 'TableHead',\n          style: { zIndex: 1, position: 'sticky', top: 0 },\n          ref: theadRef,\n          ...contextPropIfNotDomElement(TheTHead, context),\n        } as any,\n        fixedHeaderContent()\n      )\n    : null\n\n  return (\n    <TheScroller {...props}>\n      <TheViewport>\n        {React.createElement(TheTable!, { style: { borderSpacing: 0 }, ...contextPropIfNotDomElement(TheTable, context) } as any, [\n          theHead,\n          <Items key=\"TableBody\" />,\n        ])}\n      </TheViewport>\n    </TheScroller>\n  )\n})\n\nexport const {\n  Component: Table,\n  usePublisher,\n  useEmitterValue,\n  useEmitter,\n} = systemToComponent(\n  combinedSystem,\n  {\n    required: {},\n    optional: {\n      context: 'context',\n      followOutput: 'followOutput',\n      firstItemIndex: 'firstItemIndex',\n      itemContent: 'itemContent',\n      fixedHeaderContent: 'fixedHeaderContent',\n      overscan: 'overscan',\n      increaseViewportBy: 'increaseViewportBy',\n      totalCount: 'totalCount',\n      topItemCount: 'topItemCount',\n      initialTopMostItemIndex: 'initialTopMostItemIndex',\n      components: 'components',\n      groupCounts: 'groupCounts',\n      atBottomThreshold: 'atBottomThreshold',\n      computeItemKey: 'computeItemKey',\n      defaultItemHeight: 'defaultItemHeight',\n      fixedItemHeight: 'fixedItemHeight',\n      itemSize: 'itemSize',\n      scrollSeekConfiguration: 'scrollSeekConfiguration',\n      data: 'data',\n      initialItemCount: 'initialItemCount',\n      initialScrollTop: 'initialScrollTop',\n      alignToBottom: 'alignToBottom',\n      useWindowScroll: 'useWindowScroll',\n      customScrollParent: 'customScrollParent',\n      scrollerRef: 'scrollerRef',\n      logLevel: 'logLevel',\n    },\n    methods: {\n      scrollToIndex: 'scrollToIndex',\n      scrollIntoView: 'scrollIntoView',\n      scrollTo: 'scrollTo',\n      scrollBy: 'scrollBy',\n    },\n    events: {\n      isScrolling: 'isScrolling',\n      endReached: 'endReached',\n      startReached: 'startReached',\n      rangeChanged: 'rangeChanged',\n      atBottomStateChange: 'atBottomStateChange',\n      atTopStateChange: 'atTopStateChange',\n      totalListHeightChanged: 'totalListHeightChanged',\n      itemsRendered: 'itemsRendered',\n      groupIndices: 'groupIndices',\n    },\n  },\n  TableRoot\n)\n\nconst Scroller = buildScroller({ usePublisher, useEmitterValue, useEmitter })\nconst WindowScroller = buildWindowScroller({ usePublisher, useEmitterValue, useEmitter })\n","import { ReactElement, Ref } from 'react'\n\nimport {\n  Components,\n  ComputeItemKey,\n  FollowOutput,\n  GridComponents,\n  GridComputeItemKey,\n  GridItemContent,\n  GroupContent,\n  GroupItemContent,\n  IndexLocationWithAlign,\n  ItemContent,\n  ListItem,\n  ListRange,\n  ScrollSeekConfiguration,\n  TableComponents,\n  FixedHeaderContent,\n  ScrollIntoViewLocation,\n  ListRootProps,\n  GridRootProps,\n} from './interfaces'\nimport { List } from './List'\nimport { Grid } from './Grid'\nimport { Table } from './Table'\n\nexport interface VirtuosoProps<D, C> extends ListRootProps {\n  /**\n   * The total amount of items to be rendered.\n   */\n  totalCount?: number\n\n  /**\n   * The data items to be rendered. If data is set, the total count will be inferred from the length of the array.\n   */\n  data?: readonly D[]\n\n  /**\n   * Additional context available in the custom components and content callbacks\n   */\n  context?: C\n\n  /**\n   * *The property accepts pixel values.*\n   *\n   * Set the overscan property to make the component \"chunk\" the rendering of new items on scroll.\n   * The property causes the component to render more items than the necessary, but reduces the re-renders on scroll.\n   * Setting `{ main: number, reverse: number }` lets you extend the list in both the main and the reverse scrollable directions.\n   * See the `increaseViewportBy` property for a similar behavior (equivalent to the `overscan` in react-window).\n   *\n   */\n  overscan?: number | { main: number; reverse: number }\n\n  /**\n   *\n   * *The property accepts pixel values.*\n   *\n   * Set the increaseViewportBy property to artificially increase the viewport size, causing items to be rendered before outside of the viewport.\n   * The property causes the component to render more items than the necessary, but can help with slow loading content.\n   * Using `{ top?: number, bottom?: number }` lets you set the increase for each end separately.\n   *\n   */\n  increaseViewportBy?: number | { top: number; bottom: number }\n\n  /**\n   * Set the amount of items to remain fixed at the top of the list.\n   *\n   * For a header that scrolls away when scrolling, check the `components.Header` property.\n   */\n  topItemCount?: number\n\n  /**\n   * Set to a value between 0 and totalCount - 1 to make the list start scrolled to that item.\n   * Pass in an object to achieve additional effects similar to `scrollToIndex`.\n   */\n  initialTopMostItemIndex?: number | IndexLocationWithAlign\n\n  /**\n   * Set this value to offset the initial location of the list.\n   * Warning: using this property will still run a render cycle at the scrollTop: 0 list window.\n   * If possible, avoid using it and stick to `initialTopMostItemIndex` instead.\n   */\n  initialScrollTop?: number\n\n  /**\n   * Use for server-side rendering - if set, the list will render the specified amount of items\n   * regardless of the container / item size.\n   */\n  initialItemCount?: number\n\n  /**\n   * Use the `components` property for advanced customization of the elements rendered by the list.\n   */\n  components?: Components<C>\n\n  /**\n   * Set the callback to specify the contents of the item.\n   */\n  itemContent?: ItemContent<D, C>\n\n  /**\n   * If specified, the component will use the function to generate the `key` property for each list item.\n   */\n  computeItemKey?: ComputeItemKey<D, C>\n\n  /**\n   * By default, the component assumes the default item height from the first rendered item (rendering it as a \"probe\").\n   *\n   * If the first item turns out to be an outlier (very short or tall), the rest of the rendering will be slower,\n   * as multiple passes of rendering should happen for the list to fill the viewport.\n   *\n   * Setting `defaultItemHeight` causes the component to skip the \"probe\" rendering and use the property\n   * value as default height instead.\n   */\n  defaultItemHeight?: number\n\n  /**\n   * Allows customizing the height/width calculation of `Item` elements.\n   *\n   * The default implementation reads `el.getBoundingClientRect().height` and `el.getBoundingClientRect().width`.\n   */\n  itemSize?: (el: HTMLElement, field: 'offsetHeight' | 'offsetWidth') => number\n\n  /**\n   * Can be used to improve performance if the rendered items are of known size.\n   * Setting it causes the component to skip item measurements.\n   */\n  fixedItemHeight?: number\n\n  /**\n   * Use to display placeholders if the user scrolls fast through the list.\n   *\n   * Set `components.ScrollSeekPlaceholder` to change the placeholder content.\n   */\n  scrollSeekConfiguration?: ScrollSeekConfiguration | false\n\n  /**\n   * If set to `true`, the list automatically scrolls to bottom if the total count is changed.\n   * Set to `\"smooth\"` for an animated scrolling.\n   *\n   * By default, `followOutput` scrolls down only if the list is already at the bottom.\n   * To implement an arbitrary logic behind that, pass a function:\n   *\n   * ```tsx\n   * <Virtuoso\n   *  followOutput={(isAtBottom: boolean) => {\n   *    if (expression) {\n   *      return 'smooth' // can be 'auto' or false to avoid scrolling\n   *    } else {\n   *      return false\n   *    }\n   *  }} />\n   * ```\n   */\n  followOutput?: FollowOutput\n\n  /**\n   * Set to customize the wrapper tag for the header and footer components (default is `div`).\n   */\n  headerFooterTag?: string\n\n  /**\n   * Use when implementing inverse infinite scrolling - decrease the value this property\n   * in combination with  `data` or `totalCount` to prepend items to the top of the list.\n   *\n   * Warning: the firstItemIndex should **be a positive number**, based on the total amount of items to be displayed.\n   */\n  firstItemIndex?: number\n\n  /**\n   * Called when the list starts/stops scrolling.\n   */\n  isScrolling?: (isScrolling: boolean) => void\n\n  /**\n   * Gets called when the user scrolls to the end of the list.\n   * Receives the last item index as an argument. Can be used to implement endless scrolling.\n   */\n  endReached?: (index: number) => void\n\n  /**\n   * Called when the user scrolls to the start of the list.\n   */\n  startReached?: (index: number) => void\n\n  /**\n   * Called with the new set of items each time the list items are rendered due to scrolling.\n   */\n  rangeChanged?: (range: ListRange) => void\n\n  /**\n   * Called with true / false when the list has reached the bottom / gets scrolled up.\n   * Can be used to load newer items, like `tail -f`.\n   */\n  atBottomStateChange?: (atBottom: boolean) => void\n\n  /**\n   * Called with `true` / `false` when the list has reached the top / gets scrolled down.\n   */\n  atTopStateChange?: (atTop: boolean) => void\n\n  /**\n   * Called when the total list height is changed due to new items or viewport resize.\n   */\n  totalListHeightChanged?: (height: number) => void\n\n  /**\n   * Called with the new set of items each time the list items are rendered due to scrolling.\n   */\n  itemsRendered?: (items: ListItem<D>[]) => void\n\n  /**\n   * Setting `alignToBottom` to `true` aligns the items to the bottom of the list if the list is shorter than the viewport.\n   * Use `followOutput` property to keep the list aligned when new items are appended.\n   */\n  alignToBottom?: boolean\n\n  /**\n   * Uses the document scroller rather than wrapping the list in its own.\n   */\n  useWindowScroll?: boolean\n\n  /**\n   * Pass a reference to a scrollable parent element, so that the list won't wrap in its own.\n   */\n  customScrollParent?: HTMLElement\n\n  /**\n   * Provides access to the root DOM element\n   */\n  scrollerRef?: (ref: HTMLElement | Window | null) => any\n\n  /**\n   * By default `4`. Redefine to change how much away from the bottom the scroller can be before the list is not considered not at bottom.\n   */\n  atBottomThreshold?: number\n}\n\nexport interface GroupedVirtuosoProps<D, C> extends Omit<VirtuosoProps<D, C>, 'totalCount' | 'itemContent'> {\n  /**\n   * Specifies the amount of items in each group (and, actually, how many groups are there).\n   * For example, passing [20, 30] will display 2 groups with 20 and 30 items each.\n   */\n  groupCounts?: number[]\n\n  /**\n   * Specifies how each each group header gets rendered. The callback receives the zero-based index of the group.\n   */\n  groupContent?: GroupContent\n\n  /**\n   * Specifies how each each item gets rendered.\n   */\n  itemContent?: GroupItemContent<D, C>\n}\n\nexport interface TableVirtuosoProps<D, C> extends Omit<VirtuosoProps<D, C>, 'components' | 'headerFooterTag' | 'topItemCount'> {\n  /**\n   * Use the `components` property for advanced customization of the elements rendered by the table.\n   */\n  components?: TableComponents<C>\n  /**\n   * Set the contents of the table header.\n   */\n  fixedHeaderContent?: FixedHeaderContent\n\n  /**\n   * The total amount of items to be rendered.\n   */\n  totalCount?: number\n\n  /**\n   * The data items to be rendered. If data is set, the total count will be inferred from the length of the array.\n   */\n  data?: readonly D[]\n\n  /**\n   * Set the overscan property to make the component \"chunk\" the rendering of new items on scroll.\n   * The property causes the component to render more items than the necessary, but reduces the re-renders on scroll.\n   * Setting `{ main: number, reverse: number }` lets you extend the list in both the main and the reverse scrollable directions.\n   * See the `increaseViewportBy` property for a similar behavior (equivalent to the `overscan` in `react-window`).\n   */\n  overscan?: number | { main: number; reverse: number }\n\n  /**\n   * Set the increaseViewportBy property to artificially increase the viewport size, causing items to be rendered before outside of the viewport.\n   * The property causes the component to render more items than the necessary, but can help with slow loading content.\n   * Using `{ top?: number, bottom?: number }` lets you set the increase for each end separately.\n   */\n  increaseViewportBy?: number | { top: number; bottom: number }\n\n  /**\n   * Set to a value between 0 and totalCount - 1 to make the list start scrolled to that item.\n   */\n  initialTopMostItemIndex?: number\n\n  /**\n   * Set this value to offset the initial location of the list.\n   * Warning: using this property will still run a render cycle at the scrollTop: 0 list window.\n   * If possible, avoid using it and stick to `initialTopMostItemIndex` instead.\n   */\n  initialScrollTop?: number\n\n  /**\n   * Use for server-side rendering - if set, the list will render the specified amount of items\n   * regardless of the container / item size.\n   */\n  initialItemCount?: number\n\n  /**\n   * Set the callback to specify the contents of the item.\n   */\n  itemContent?: ItemContent<D, C>\n\n  /**\n   * If specified, the component will use the function to generate the `key` property for each list item.\n   */\n  computeItemKey?: ComputeItemKey<D, C>\n\n  /**\n   * By default, the component assumes the default item height from the first rendered item (rendering it as a \"probe\").\n   *\n   * If the first item turns out to be an outlier (very short or tall), the rest of the rendering will be slower,\n   * as multiple passes of rendering should happen for the list to fill the viewport.\n   *\n   * Setting `defaultItemHeight` causes the component to skip the \"probe\" rendering and use the property\n   * value as default height instead.\n   */\n  defaultItemHeight?: number\n\n  /**\n   * Allows customizing the height/width calculation of `Item` elements.\n   *\n   * The default implementation reads `el.getBoundingClientRect().height` and `el.getBoundingClientRect().width`.\n   */\n  itemSize?: (el: HTMLElement, field: 'offsetHeight' | 'offsetWidth') => number\n\n  /**\n   * Can be used to improve performance if the rendered items are of known size.\n   * Setting it causes the component to skip item measurements.\n   */\n  fixedItemHeight?: number\n\n  /**\n   * Use to display placeholders if the user scrolls fast through the list.\n   *\n   * Set `components.ScrollSeekPlaceholder` to change the placeholder content.\n   */\n  scrollSeekConfiguration?: ScrollSeekConfiguration | false\n\n  /**\n   * If set to `true`, the list automatically scrolls to bottom if the total count is changed.\n   * Set to `\"smooth\"` for an animated scrolling.\n   *\n   * By default, `followOutput` scrolls down only if the list is already at the bottom.\n   * To implement an arbitrary logic behind that, pass a function:\n   *\n   * ```tsx\n   * <Virtuoso\n   *  followOutput={(isAtBottom: boolean) => {\n   *    if (expression) {\n   *      return 'smooth' // can be 'auto' or false to avoid scrolling\n   *    } else {\n   *      return false\n   *    }\n   *  }} />\n   * ```\n   */\n  followOutput?: FollowOutput\n\n  /**\n   * Use when implementing inverse infinite scrolling - decrease the value this property\n   * in combination with  `data` or `totalCount` to prepend items to the top of the list.\n   *\n   * Warning: the firstItemIndex should **be a positive number**, based on the total amount of items to be displayed.\n   */\n  firstItemIndex?: number\n\n  /**\n   * Called when the list starts/stops scrolling.\n   */\n  isScrolling?: (isScrolling: boolean) => void\n\n  /**\n   * Gets called when the user scrolls to the end of the list.\n   * Receives the last item index as an argument. Can be used to implement endless scrolling.\n   */\n  endReached?: (index: number) => void\n\n  /**\n   * Called when the user scrolls to the start of the list.\n   */\n  startReached?: (index: number) => void\n\n  /**\n   * Called with the new set of items each time the list items are rendered due to scrolling.\n   */\n  rangeChanged?: (range: ListRange) => void\n\n  /**\n   * Called with true / false when the list has reached the bottom / gets scrolled up.\n   * Can be used to load newer items, like `tail -f`.\n   */\n  atBottomStateChange?: (atBottom: boolean) => void\n\n  /**\n   * Called with `true` / `false` when the list has reached the top / gets scrolled down.\n   */\n  atTopStateChange?: (atTop: boolean) => void\n\n  /**\n   * Called when the total list height is changed due to new items or viewport resize.\n   */\n  totalListHeightChanged?: (height: number) => void\n\n  /**\n   * Called with the new set of items each time the list items are rendered due to scrolling.\n   */\n  itemsRendered?: (items: ListItem<D>[]) => void\n\n  /**\n   * Setting `alignToBottom` to `true` aligns the items to the bottom of the list if the list is shorter than the viewport.\n   * Use `followOutput` property to keep the list aligned when new items are appended.\n   */\n  alignToBottom?: boolean\n\n  /**\n   * Uses the document scroller rather than wrapping the list in its own.\n   */\n  useWindowScroll?: boolean\n\n  /**\n   * Pass a reference to a scrollable parent element, so that the table won't wrap in its own.\n   */\n  customScrollParent?: HTMLElement\n\n  /**\n   * Provides access to the root DOM element\n   */\n  scrollerRef?: (ref: HTMLElement | Window | null) => any\n\n  /**\n   * By default `4`. Redefine to change how much away from the bottom the scroller can be before the list is not considered not at bottom.\n   */\n  atBottomThreshold?: number\n}\n\nexport interface VirtuosoGridProps<C extends unknown = unknown> extends GridRootProps {\n  /**\n   * The total amount of items to be rendered.\n   */\n  totalCount: number\n\n  /**\n   * Set the callback to specify the contents of the item.\n   */\n  itemContent?: GridItemContent<C>\n\n  /**\n   * Use the `components` property for advanced customization of the elements rendered by the list.\n   */\n  components?: GridComponents<C>\n\n  /**\n   * Set the overscan property to make the component \"chunk\" the rendering of new items on scroll.\n   * The property causes the component to render more items than the necessary, but reduces the re-renders on scroll.\n   * Setting `{ main: number, reverse: number }` lets you extend the list in both the main and the reverse scrollable directions.\n   */\n  overscan?: number | { main: number; reverse: number }\n\n  /**\n   * If specified, the component will use the function to generate the `key` property for each list item.\n   */\n  computeItemKey?: GridComputeItemKey\n\n  /**\n   * Use to display placeholders if the user scrolls fast through the list.\n   *\n   * Set `components.ScrollSeekPlaceholder` to change the placeholder content.\n   */\n  scrollSeekConfiguration?: ScrollSeekConfiguration | false\n\n  /**\n   * Called when the list starts/stops scrolling.\n   */\n  isScrolling?: (isScrolling: boolean) => void\n\n  /**\n   * Gets called when the user scrolls to the end of the list.\n   * Receives the last item index as an argument. Can be used to implement endless scrolling.\n   */\n  endReached?: (index: number) => void\n\n  /**\n   * Called when the user scrolls to the start of the list.\n   */\n  startReached?: (index: number) => void\n\n  /**\n   * Called with the new set of items each time the list items are rendered due to scrolling.\n   */\n  rangeChanged?: (range: ListRange) => void\n\n  /**\n   * Called with true / false when the list has reached the bottom / gets scrolled up.\n   * Can be used to load newer items, like `tail -f`.\n   */\n  atBottomStateChange?: (atBottom: boolean) => void\n\n  /**\n   * Called with `true` / `false` when the list has reached the top / gets scrolled down.\n   */\n  atTopStateChange?: (atTop: boolean) => void\n\n  /**\n   * Provides access to the root DOM element\n   */\n  scrollerRef?: (ref: HTMLElement | null) => any\n\n  /**\n   * Sets the className for the list DOM element\n   */\n  listClassName?: string\n\n  /**\n   * Sets the grid items' className\n   */\n  itemClassName?: string\n\n  /**\n   * Uses the document scroller rather than wrapping the grid in its own.\n   */\n  useWindowScroll?: boolean\n\n  /**\n   * Pass a reference to a scrollable parent element, so that the grid won't wrap in its own.\n   */\n  customScrollParent?: HTMLElement\n}\n\nexport interface VirtuosoHandle {\n  /**\n   * Scrolls the component to the specified item index. See {@link IndexLocationWithAlign} for more options.\n   */\n  scrollToIndex(location: number | IndexLocationWithAlign): void\n  /**\n   * Scrolls the item into view if necessary. See [the website example](http://virtuoso.dev/keyboard-navigation/) for an implementation.\n   */\n  scrollIntoView(location: ScrollIntoViewLocation): void\n  /**\n   * Scrolls the component to the specified location. See [ScrollToOptions (MDN)](https://developer.mozilla.org/en-US/docs/Web/API/ScrollToOptions)\n   */\n  scrollTo(location: ScrollToOptions): void\n  /**\n   * Scrolls the component with the specified amount. See [ScrollToOptions (MDN)](https://developer.mozilla.org/en-US/docs/Web/API/ScrollToOptions)\n   */\n  scrollBy(location: ScrollToOptions): void\n}\n\nexport interface GroupedVirtuosoHandle {\n  scrollToIndex(location: number | IndexLocationWithAlign): void\n  scrollTo(location: ScrollToOptions): void\n  scrollBy(location: ScrollToOptions): void\n}\n\nexport interface VirtuosoGridHandle {\n  scrollToIndex(location: number | IndexLocationWithAlign): void\n  scrollTo(location: ScrollToOptions): void\n  scrollBy(location: ScrollToOptions): void\n}\n\nexport interface TableVirtuosoHandle {\n  scrollIntoView(location: ScrollIntoViewLocation): void\n  scrollToIndex(location: number | IndexLocationWithAlign): void\n  scrollTo(location: ScrollToOptions): void\n  scrollBy(location: ScrollToOptions): void\n}\n\nexport const Virtuoso = List as <ItemData extends unknown = any, Context extends unknown = any>(\n  props: VirtuosoProps<ItemData, Context> & { ref?: Ref<VirtuosoHandle> }\n) => ReactElement\n\nexport const GroupedVirtuoso = List as <ItemData extends unknown = any, Context extends unknown = any>(\n  props: GroupedVirtuosoProps<ItemData, Context> & { ref?: Ref<GroupedVirtuosoHandle> }\n) => ReactElement\n\nexport const TableVirtuoso = Table as <ItemData extends unknown = any, Context extends unknown = any>(\n  props: TableVirtuosoProps<ItemData, Context> & { ref?: Ref<TableVirtuosoHandle> }\n) => ReactElement\n\nexport const VirtuosoGrid = Grid as <Context extends unknown = any>(\n  props: VirtuosoGridProps<Context> & { ref?: Ref<VirtuosoGridHandle> }\n) => ReactElement\n"],"names":["LogLevel","useIsomorphicLayoutEffect","document","useLayoutEffect","useEffect","CONSOLE_METHOD_MAP","DEBUG","INFO","_CONSOLE_METHOD_MAP","WARN","ERROR","loggerSystem","u","system","logLevel","statefulStream","log","label","message","level","_getGlobalThis$VIRTUO","globalThis","window","getValue","console","singleton","useSizeWithElRef","callback","enabled","ref","useRef","callbackRef","_el","ResizeObserver","observer","entries","element","target","offsetParent","elRef","observe","current","unobserve","useSize","useChangedListContentsSizes","itemSize","scrollContainerStateCallback","customScrollParent","el","ranges","children","field","length","results","i","child","item","undefined","dataset","index","parseInt","knownSize","parseFloat","size","lastResult","endIndex","push","startIndex","getChangedChildSizes","scrollableElement","parentElement","scrollTop","firstElementChild","pageYOffset","documentElement","Math","max","scrollHeight","correctItemSize","dimension","round","getBoundingClientRect","useScrollTop","smoothScrollTargetReached","scrollerElement","scrollerRefCallback","noop","scrollerRef","scrollTopTarget","timeoutRef","handler","useCallback","ev","clearTimeout","localRef","addEventListener","passive","removeEventListener","scrollByCallback","location","scrollBy","scrollToCallback","offsetHeight","isSmooth","behavior","innerHeight","top","ceil","min","abs","setTimeout","scrollTo","domIOSystem","scrollContainerState","stream","deviation","statefulScrollTop","viewportHeight","headerHeight","footerHeight","scrollingInProgress","connect","pipe","map","_ref","_ref2","NIL_NODE","lvl","newAANode","k","v","l","r","empty","node","newTree","remove","key","last","adjust","clone","_last","deleteLast","findMaxKeyValue","value","Infinity","insert","split","skew","rebalance","walkWithin","start","end","result","concat","walk","args","isSingle","Error","rl","rlvl","rangesWithin","arrayToRanges","items","parser","_parser","nextIndex","nextValue","_parser2","findIndexOfClosestSmallerOrEqual","comparator","floor","match","join","findClosestSmallerOrEqual","rangeIncludes","refRange","range","indexComparator","itemIndex","offsetComparator","offset","itemOffset","offsetPointParser","point","createOffsetTree","prevOffsetTree","syncStart","sizeTree","offsetTree","prevIndex","prevSize","prevOffset","arrayBinarySearch","kv","slice","_step3","_iterator3","_createForOfIteratorHelperLoose","done","aOffset","lastIndex","lastOffset","lastSize","sizeStateReducer","state","_ref3","groupIndices","newSizeTree","groupSize","reduce","tree","groupIndex","insertRanges","_step","_iterator","overlappingRanges","some","_step2","firstPassDone","shouldInsert","_iterator2","_step2$value","rangeStart","rangeEnd","rangeValue","newOffsetTree","_createOffsetTree","groupOffsetTree","offsetOf","_arrayBinarySearch$fi","originalIndexFromItemIndex","sizes","hasGroups","groupOffset","SIZE_MAP","offsetWidth","sizeSystem","_ref4","sizeRanges","totalCount","statefulTotalCount","statefulStreamFromEmitter","unshiftWith","shiftWith","firstItemIndex","fixedItemSize","defaultItemSize","data","initial","withLatestFrom","scan","distinctUntilChanged","filter","indexes","_ref5","idx","_extends","_ref6","_ref7","trackItemSizes","listRefresh","streamFromEmitter","_ref8","_ref9","oldSizes","newSizes","changed","subscribe","prev","next","diff","val","publish","_ref10","beforeUnshiftWith","_ref11","acc","_ref12","shiftWithOffset","_ref13","_ref14","_ref15","tup","SUPPORTS_SCROLL_TO_OPTIONS","style","normalizeIndexLocation","align","scrollToIndexSystem","_ref$","_ref$2","scrollToIndex","topListHeight","unsubscribeNextListRefresh","cleartTimeoutRef","unsubscribeListRefresh","cleanup","normalLocation","retry","listChanged","handleNext","UP","INITIAL_BOTTOM_STATE","atBottom","notAtBottomBecause","offsetBottom","stateFlagsSystem","isAtBottom","isAtTop","atBottomStateChange","atTopStateChange","atBottomThreshold","isScrolling","merge","duc","skip","mapTo","debounceTime","isScrollingBy","atBottomState","combineLatest","atBottomBecause","scrollTopDelta","_ref2$","_headerHeight","lastJumpDueToItemResize","jump","throttleTime","scrollDirection","direction","prevScrollTop","scrollVelocity","_","propsReadySystem","propsReady","didMount","ready","initialTopMostItemIndexSystem","scrolledToInitialItem","initialTopMostItemIndex","normalizeFollowOutput","follow","followOutputSystem","_ref$3","followOutput","pendingScrollHandle","scrollToBottom","followOutputBehavior","shouldFollow","behaviorFromFollowOutput","refreshed","cancel","groupCountsToIndicesAndCount","counts","groupCount","groupedListSystem","groupCounts","topItemsIndexes","groupIndicesAndCount","prop","tupleComparator","rangeComparator","getOverscan","overscan","main","reverse","getViewportIncrease","sizeRangeSystem","listBoundary","fixedHeaderHeight","increaseViewportBy","visibleRange","listTop","listBottom","stickyHeaderHeight","headerVisible","topViewportAddition","bottomViewportAddition","EMPTY_LIST_STATE","topItems","offsetTop","bottom","transposeItems","originalIndex","transposedItems","groupRanges","currentRange","currentGroupIndex","shift","indexOf","type","buildListState","lastItem","height","listStateSystem","func","called","rangeTopListHeight","stateFlags","itemsRendered","listState","_ref3$","startOffset","endOffset","sizesValue","probeItemSet","getInitialTopMostItemIndexNumber","rangeStartIndex","rangeEndIndex","minStartIndex","offsetPointRanges","endValue","findRange","rangesWithinOffsets","maxIndex","tap","endReached","count","startReached","rangeChanged","initialItemCountSystem","initialItemCount","_ref3$2","includedGroupsCount","adjustedCount","Array","from","scrollSeekSystem","isSeeking","scrollSeekConfiguration","speed","config","enter","exit","velocity","change","scrollSeekRangeChanged","topItemCountSystem","topItemCount","totalListHeightSystem","totalListHeightChanged","totalListHeight","upwardScrollFixSystem","deviationOffset","prevItems","newDev","onlyItem","prevItem","find","pItem","_ret","_loop","amount","initialScrollTopSystem","initialScrollTop","alignToBottomSystem","alignToBottom","paddingTopAddition","windowScrollerSystem","windowScrollContainerState","windowViewportRect","windowScrollTo","useWindowScroll","scrollIntoViewSystem","scrollIntoView","_ref2$$behavior","itemTop","featureGroup1System","listSystem","_ref2$2","domIO","_ref2$3","flags","featureGroup1","fixedItemHeight","defaultItemHeight","positionStickyCssValue","createElement","position","useWindowViewportRectRef","viewportInfo","calculateInfo","visibleHeight","rect","visibleWidth","width","customScrollParentRect","deltaTop","_useSizeWithElRef","scrollAndResizeEventHandler","_excluded","_excluded2","_excluded3","identity","listComponentPropsSystem","itemContent","context","groupContent","components","computeItemKey","headerFooterTag","distinctProp","propName","defaultValue","FooterComponent","HeaderComponent","TopItemListComponent","ListComponent","ItemComponent","GroupComponent","ScrollerComponent","EmptyPlaceholder","ScrollSeekPlaceholder","addDeprecatedAlias","alias","warn","combinedSystem","propsSystem","deprecatedProps","group","itemHeight","scrollingStateChange","adjustForPrependedItems","maxHeightCacheSize","footer","header","HeaderContainer","FooterContainer","ItemContainer","ScrollContainer","GroupContainer","ListContainer","emptyComponent","scrollSeek","deprecateComponentProp","componentName","comp","_extends2","placeholder","DefaultScrollSeekPlaceholder","React","GROUP_STYLE","zIndex","overflowAnchor","Items","memo","showTopList","_ref5$showTopList","useEmitterValue","usePublisher","windowScrollContainerStateCallback","_scrollContainerStateCallback","containerStyle","boxSizing","paddingTop","paddingBottom","marginTop","contextPropIfNotDomElement","scrollerStyle","outline","overflowY","WebkitOverflowScrolling","viewportStyle","topItemListStyle","Header","Footer","buildScroller","useEmitter","props","_objectWithoutPropertiesLoose","_useScrollTop","tabIndex","buildWindowScroller","_useScrollTop2","Viewport","viewportRef","compose","WindowViewport","TopItemListContainer","TopItemList","ListRoot","TheViewport","WindowScroller","Scroller","systemToComponent","required","optional","methods","events","List","Component","_systemToComponent","INITIAL_GRID_STATE","itemWidth","PROBE_GRID_STATE","buildItems","gridSystem","_ref$4","gridState","viewportDimensions","itemDimensions","_ref4$","_ref4$$","viewport","viewportWidth","perRow","itemsPerRow","_gridLayout","gridLayout","gridComponentPropsSystem","itemClassName","listClassName","GridItems","scrollHeightCallback","listRef","firstItem","firstChild","className","GridRoot","Grid","tableComponentPropsSystem","fixedHeaderContent","TableComponent","TableHeadComponent","TableBodyComponent","TableRowComponent","FillerRow","padding","border","paddingTopEl","paddingBottomEl","TableRoot","theadRef","TheScroller","TheTable","TheTHead","theHead","borderSpacing","Table","Virtuoso","TableVirtuoso","VirtuosoGrid"],"mappings":"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"}